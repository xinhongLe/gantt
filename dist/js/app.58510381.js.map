{"version":3,"file":"js/app.58510381.js","mappings":"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","sources":["webpack://gantt/./src/App.vue","webpack://gantt/./src/components/ganttDemo.vue","webpack://gantt/./src/components/index.js","webpack://gantt/./src/packages/components/ganttChartVue/index.vue","webpack://gantt/./src/packages/components/ganttChartVue/index.js","webpack://gantt/./src/packages/components/ganttChartVue/tagItem.vue","webpack://gantt/./src/packages/components/ganttChartVue/tagItemLabel.vue","webpack://gantt/src/packages/components/ganttChartVue/tagItemLabel.vue","webpack://gantt/./src/packages/components/ganttChartVue/tagItemLabel.vue?a7f1","webpack://gantt/./src/packages/components/ganttChartVue/tagItemLabel.vue?8a56","webpack://gantt/src/packages/components/ganttChartVue/tagItem.vue","webpack://gantt/./src/packages/components/ganttChartVue/tagItem.vue?5adb","webpack://gantt/./src/packages/components/ganttChartVue/tagItem.vue?c930","webpack://gantt/./src/packages/components/ganttChartVue/yTimeLine.vue","webpack://gantt/src/packages/components/ganttChartVue/yTimeLine.vue","webpack://gantt/./src/packages/components/ganttChartVue/yTimeLine.vue?940b","webpack://gantt/./src/packages/components/ganttChartVue/yTimeLine.vue?d17e","webpack://gantt/src/packages/components/ganttChartVue/index.vue","webpack://gantt/./src/packages/components/ganttChartVue/index.vue?2556","webpack://gantt/./src/packages/components/ganttChartVue/index.vue?98ee","webpack://gantt/src/components/ganttDemo.vue","webpack://gantt/./src/components/ganttDemo.vue?05a6","webpack://gantt/./src/components/ganttDemo.vue?ee55","webpack://gantt/src/App.vue","webpack://gantt/./src/App.vue?c036","webpack://gantt/./src/App.vue?0e40","webpack://gantt/./src/main.js","webpack://gantt/webpack/bootstrap","webpack://gantt/webpack/runtime/amd options","webpack://gantt/webpack/runtime/chunk loaded","webpack://gantt/webpack/runtime/compat get default export","webpack://gantt/webpack/runtime/define property getters","webpack://gantt/webpack/runtime/global","webpack://gantt/webpack/runtime/hasOwnProperty shorthand","webpack://gantt/webpack/runtime/make namespace object","webpack://gantt/webpack/runtime/node module decorator","webpack://gantt/webpack/runtime/jsonp chunk loading","webpack://gantt/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('ganttDemo')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"wrap\"},[(_vm.showOther)?_c('div',{staticClass:\"header\"},[_c('el-date-picker',{attrs:{\"type\":\"date\",\"placeholder\":\"日期\",\"format\":\"yyyy/MM/dd\",\"value-format\":\"yyyy/MM/dd\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.dateValue),callback:function ($$v) {_vm.dateValue=$$v},expression:\"dateValue\"}})],1):_vm._e(),_c('div',{staticClass:\"bottom\"},[_c('div',{class:{ 'left-box': true, showDetail: _vm.showDetail }},[_c('div',{staticClass:\"gt1\",staticStyle:{\"height\":\"400px\"}},[_c('ganttChartVue',_vm._b({ref:\"ganTT1\",attrs:{\"showMarkLine\":_vm.showOther ? _vm.showMarkLine : false,\"markLineTime\":_vm.markLineTime},on:{\"update:markLineTime\":function($event){_vm.markLineTime=$event},\"update:mark-line-time\":function($event){_vm.markLineTime=$event},\"changeMarkLineClick\":_vm.changeMarkLineClick1,\"rightClickMenuClick\":_vm.rightClickMenuClick1,\"taskMenuBtnClick\":_vm.taskMenuBtnClick,\"tagMenuBtnClick\":_vm.tagMenuBtnClick1}},'ganttChartVue',_vm.ganTT1Option,false))],1)]),_c('el-drawer',{attrs:{\"visible\":_vm.drawer},on:{\"update:visible\":function($event){_vm.drawer=$event}}},[_c('el-tabs',{attrs:{\"type\":\"card\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"基础信息\",\"name\":\"1\"}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"设备名称\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择设备名称\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}},_vm._l((_vm.optionList),function(item){return _c('el-option',{attrs:{\"label\":item.label,\"value\":item.label}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"流转卡号\"}},[_c('el-input',{model:{value:(_vm.form.number),callback:function ($$v) {_vm.$set(_vm.form, \"number\", $$v)},expression:\"form.number\"}})],1),_c('el-form-item',{attrs:{\"label\":\"工艺号\"}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.form.desc),callback:function ($$v) {_vm.$set(_vm.form, \"desc\", $$v)},expression:\"form.desc\"}})],1),_c('el-form-item',{attrs:{\"label\":\"长度\"}},[_c('el-input',{model:{value:(_vm.form.length),callback:function ($$v) {_vm.$set(_vm.form, \"length\", $$v)},expression:\"form.length\"}})],1),_c('el-form-item',{attrs:{\"label\":\"时间\\n      \"}},[_c('el-time-picker',{attrs:{\"is-range\":\"\",\"value-format\":\"HH:mm\",\"format\":\"HH:mm\",\"range-separator\":\"至\",\"start-placeholder\":\"开始时间\",\"end-placeholder\":\"结束时间\",\"placeholder\":\"选择时间范围\"},model:{value:(_vm.form.times),callback:function ($$v) {_vm.$set(_vm.form, \"times\", $$v)},expression:\"form.times\"}})],1),_c('el-form-item',[_c('el-button',{on:{\"click\":function($event){_vm.drawer = false}}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSave}},[_vm._v(\"保存\")])],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"染缸参数\",\"name\":\"2\"}},[_vm._v(\"染缸参数\")]),_c('el-tab-pane',{attrs:{\"label\":\"订单信息\",\"name\":\"3\"}},[_vm._v(\"订单信息\")])],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 对象克隆\nexport function cloneObj(obj) {\n  let o = null;\n  if (Object.prototype.toString.call(obj) === \"[object Array]\") {\n    o = [];\n    for (let i = 0; i < obj.length; i++) {\n      o.push(cloneObj(obj[i]));\n    }\n  } else if (Object.prototype.toString.call(obj) === \"[object Object]\") {\n    o = {};\n\n    for (let x in obj) {\n      o[x] = cloneObj(obj[x]);\n    }\n  } else {\n    o = obj;\n  }\n  return o;\n}","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"gantt-chart-wrap\"},[_c('div',{staticClass:\"gap\",style:({ background: _vm.ganttBgColor })}),_c('div',{ref:\"ganttBoxRefDom\",staticClass:\"gantt-chart-box\",style:({ background: _vm.ganttBgColor }),attrs:{\"tabindex\":\"-2\"},on:{\"click\":_vm.ganTTClick,\"blur\":_vm.ganTTblur,\"contextmenu\":_vm.utils.oncontextmenuDisabled}},[_c('yTimeLine',_vm._b({},'yTimeLine',_vm.currentTimeLine,false)),_c('yTimeLine',_vm._b({},'yTimeLine',_vm.markLine,false)),_c('yTimeLine',_vm._b({staticStyle:{\"z-index\":\"20\"}},'yTimeLine',_vm.movingTimeLine,false)),_c('canvas',{ref:\"canvasGanttRefDom\"},[_vm._v(\"您的浏览器不支持 HTML5 canvas标签\")]),_c('div',{staticClass:\"row-header\",style:({ height: _vm.paintTop })},[_c('span',{ref:\"titleRefDom\",staticClass:\"gt-title\",style:({ width: _vm.paintLeft, height: _vm.paintTop })},[_vm._v(_vm._s(_vm.title))]),_c('div',{staticClass:\"header-right\"},[_c('div',{ref:\"headerBoxRefDom\",staticClass:\"scrollX\"},_vm._l((_vm.colsInfo),function(col,cIndex){return _c('span',{key:cIndex,staticClass:\"paint-col\"},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.utils._date.format(col.t, _vm.timeFormat)))]),_c('i',{staticClass:\"sLine\",style:({ background: _vm.gridLineColor })})])}),0)])]),_c('div',{staticClass:\"row-bottom\",style:({ height: _vm.ganTTBottomHeight ? _vm.ganTTBottomHeight + 'px' : '' })},[_c('div',{staticClass:\"box-left scrollY\",style:({ width: _vm.paintLeft })},_vm._l((_vm.rowsInfo),function(row,rIndex){return _c('div',{key:rIndex,class:{\n          'paint-row': true,\n          'disabled': row.disabled,\n          'canSelected': _vm.taskMenuList.length || row.taskMenuList,\n          'selected': _vm.taskMenu.selectRow && _vm.taskMenu.selectRow.label === row.label\n        },style:({ 'backgroundColor': row.disabled ? _vm.disabledBgColor : '' }),on:{\"contextmenu\":function($event){$event.stopPropagation();return _vm.taskMenu_Open($event, row)}}},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(row.label))]),_c('i',{staticClass:\"sLine\",style:({ background: _vm.gridLineColor })})])}),0),_c('div',{ref:\"boxRightRefDom\",staticClass:\"box-right\"},[_c('div',{ref:\"paintBoxRefDom\",staticClass:\"box-paint scrollY\",staticStyle:{\"text-align\":\"right\"}},[_c('canvas',{ref:\"canvasGridRefDom\"},[_vm._v(\"您的浏览器不支持 HTML5 canvas标签\")]),_c('canvas',{ref:\"canvasGuideBoxRefDom\",staticStyle:{\"z-index\":\"99\"}},[_vm._v(\"您的浏览器不支持 HTML5 canvas标签\")]),_c('div',{ref:\"rightClickMenuRefDom\",staticClass:\"rightClickMenu\",on:{\"contextmenu\":_vm.utils.oncontextmenuDisabled}},[_c('ul',_vm._l((_vm.rightClickMenuList),function(mItem,btnIndex){return _c('li',{key:`${mItem}-${btnIndex}}}`,class:{ 'disabled': mItem.disabled },on:{\"click\":function($event){$event.stopPropagation();return _vm.rightClickMenuEvent($event, mItem, btnIndex)},\"contextmenu\":function($event){$event.stopPropagation();return _vm.utils.oncontextmenuDisabled.apply(null, arguments)}}},[_vm._v(_vm._s(mItem.label))])}),0)]),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tagMenu.visible),expression:\"tagMenu.visible\"}],ref:\"tagMenuRefDom\",staticClass:\"tag-menu\",style:(_vm.tagMenu.style),on:{\"click\":function($event){_vm.autoCloseTagMenu = false}}},_vm._l((_vm.tagMenu.btnList),function(tagBtnItem,tagBtnIndex){return _c('li',{key:`${tagBtnItem.label}-${tagBtnIndex}}`,class:{ 'disabled': tagBtnItem.disabled },on:{\"click\":function($event){$event.stopPropagation();return _vm.tagMenuBtnClickHandle($event, tagBtnItem, tagBtnIndex)},\"contextmenu\":function($event){$event.stopPropagation();return _vm.utils.oncontextmenuDisabled.apply(null, arguments)}}},[_vm._v(\" \"+_vm._s(tagBtnItem.label))])}),0),_vm._l((_vm.tagList),function(item){return [(!item.hide)?_c('tagItem',{key:item.tagId,style:({ background: _vm.getLegendConfig(item).color || '#000000' }),attrs:{\"tipWdith\":_vm.tipWdith,\"tagItem\":item,\"tagMoveCallback\":_vm.tagMove,\"dragable\":_vm.tagItemDragable(item),\"closeTip\":_vm.tagItemCloseTip(item),\"showOperateMark\":_vm.tagHasOperateMenu(item),\"showSelected\":_vm.showSelected},on:{\"tagDragStart\":_vm.tagDragStart,\"changeEnd\":_vm.tagChangeEnd,\"tagContextmenu\":_vm.tagContextmenuHandle,\"tagClick\":_vm.tagClickHandle,\"tagBlur\":_vm.tagblurHandle},scopedSlots:_vm._u([{key:\"tagTip\",fn:function({ tagData }){return [_vm._t(\"tagTip\",null,{\"tagData\":tagData})]}}],null,true)}):_vm._e()]})],2),_c('div',{ref:\"scrollXBarDom\",staticClass:\"scrollXBar\"},[_c('div',{style:({ width: this.paintBoxInfo.width + 'px' })})])]),_c('div',{ref:\"scrollYBarDom\",staticClass:\"scrollYBar\"},[_c('div',{style:({ height: this.paintBoxInfo.height + 'px' })})])]),_vm._l((_vm.summaryRows),function(suArr,suIndex){return _c('div',{key:suIndex,staticClass:\"stat-bottom\"},[(suArr.length > 0)?[_c('div',{staticClass:\"stat-bottom_title\",style:({ width: _vm.paintLeft, minHeight: _vm.rowMinRowHeight })},[_vm._v(_vm._s(suArr[0]))]),_c('div',{staticClass:\"stat-bottom_right\"},[_c('div',{staticClass:\"scrollX\"},_vm._l((_vm.colsInfo),function(col,cIndex){return _c('span',{key:`${suIndex}-${cIndex}`,staticClass:\"stat-bottom_col\",style:({ width: `${_vm.colsInfo[cIndex] ? _vm.colsInfo[cIndex].w : 0}px` })},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(suArr[cIndex + 1]))]),_c('i',{staticClass:\"sLine\",style:({ background: _vm.gridLineColor })})])}),0)])]:_vm._e()],2)}),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.taskMenu.visible),expression:\"taskMenu.visible\"}],ref:\"taskMenuRefDom\",staticClass:\"task-menu\",style:(_vm.taskMenu.style)},_vm._l((_vm.taskMenu.btnList),function(taskBtnItem,taskBtnIndex){return _c('li',{key:`${taskBtnItem.label}-${taskBtnIndex}}`,class:{ 'disabled': taskBtnItem.disabled },on:{\"click\":function($event){$event.stopPropagation();return _vm.taskMenuBtnClick($event, taskBtnItem, taskBtnIndex)},\"contextmenu\":function($event){$event.stopPropagation();return _vm.utils.oncontextmenuDisabled.apply(null, arguments)}}},[_vm._v(\" \"+_vm._s(taskBtnItem.label))])}),0)],2),_c('el-dialog',{attrs:{\"title\":\"时间选择\",\"visible\":_vm.tagTimeDialog.visible,\"width\":\"450px\",\"close-on-click-modal\":false},on:{\"update:visible\":function($event){return _vm.$set(_vm.tagTimeDialog, \"visible\", $event)}}},[_c('div',[_c('el-date-picker',{attrs:{\"type\":\"datetimerange\",\"picker-options\":_vm.pickerOptions,\"range-separator\":\"-\",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"align\":\"right\",\"value-format\":\"yyyy/MM/dd HH:mm:ss\"},model:{value:(_vm.tagTimeDialog.timeRange),callback:function ($$v) {_vm.$set(_vm.tagTimeDialog, \"timeRange\", $$v)},expression:\"tagTimeDialog.timeRange\"}})],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.closeTagTimeDialog}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmTagTimeDlaiog}},[_vm._v(\"确 定\")])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import dayjs from \"dayjs\";\n\n// 生成唯一uuid\nexport function uuid(len, radix) {\n  var chars =\n    \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n  var uuid = [],\n    i;\n  radix = radix || chars.length;\n\n  if (len) {\n    // Compact form\n    for (i = 0; i < len; i++) uuid[i] = chars[0 | (Math.random() * radix)];\n  } else {\n    // rfc4122, version 4 form\n    var r;\n\n    // rfc4122 requires these characters\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n    uuid[14] = \"4\";\n\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n    for (i = 0; i < 36; i++) {\n      if (!uuid[i]) {\n        r = 0 | (Math.random() * 16);\n        uuid[i] = chars[i == 19 ? (r & 0x3) | 0x8 : r];\n      }\n    }\n  }\n\n  return uuid.join(\"\");\n}\n\nconst toStr = Function.prototype.call.bind(Object.prototype.toString);\n\nexport function isObjectObject(t) {\n  return toStr(t) === \"[object Object]\";\n}\nexport function isObjectString(t) {\n  return toStr(t) === \"[object String]\";\n}\nexport function isObjectArray(t) {\n  return toStr(t) === \"[object Array]\";\n}\nexport function isObjectNull(t) {\n  return toStr(t) === \"[object Null]\";\n}\nexport function isObjectUnde(t) {\n  return toStr(t) === \"[object Undefined]\";\n}\nexport function isObjectFunction(t) {\n  return toStr(t) === \"[object Function]\";\n}\n\n// 对象合并\nexport function mergeObj(target, ...arg) {\n  return arg.reduce((acc, cur) => {\n    if (!isObjectObject(cur)) {\n      return acc;\n    } else {\n      return Object.keys(cur).reduce((subAcc, key) => {\n        const srcVal = cur[key];\n        if (isObjectObject(srcVal)) {\n          subAcc[key] = mergeObj(subAcc[key] ? subAcc[key] : {}, srcVal);\n        } else if (isObjectArray(srcVal)) {\n          // series: []，下层数组直接赋值\n          subAcc[key] = srcVal.map((item, idx) => {\n            if (isObjectObject(item)) {\n              const curAccVal = subAcc[key] ? subAcc[key] : [];\n              return mergeObj(curAccVal[idx] ? curAccVal[idx] : {}, item);\n            } else {\n              return item;\n            }\n          });\n        } else {\n          subAcc[key] = srcVal;\n        }\n        return subAcc;\n      }, acc);\n    }\n  }, target);\n}\n\n// 对象克隆\nexport function cloneObj(obj) {\n  let o = null;\n  if (Object.prototype.toString.call(obj) === \"[object Array]\") {\n    o = [];\n    for (let i = 0; i < obj.length; i++) {\n      o.push(cloneObj(obj[i]));\n    }\n  } else if (Object.prototype.toString.call(obj) === \"[object Object]\") {\n    o = {};\n\n    for (let x in obj) {\n      o[x] = cloneObj(obj[x]);\n    }\n  } else {\n    o = obj;\n  }\n  return o;\n}\n\n/**\n * 判断指定dom节点是否是具有定位属性的节点 - 即：position为 absolute | relative | fixed\n * @param _node\n * @returns {boolean}\n */\nexport function judgeIsLocateNode(_node) {\n  let cssStyle = window.getComputedStyle(_node, null);\n  return cssStyle.position !== \"static\"; // 不是默认的就是有定位的\n}\n\n/**\n * 获取指定节点的有定位的父节点\n * @param ele 子节点\n * @param flag 父节点类或id选择器或者元素节点名称，eg： 类：.app | id: #app | 元素节点名称 body 或者 flag直接是dom对象\n * @returns {HTMLElement | null}\n */\nexport function findLocateParentNode(ele) {\n  if (!ele) return null;\n  let parent = ele.parentNode;\n\n  let locateParentNode = null; // 有定位父节点\n  while (parent && parent.nodeName !== \"BODY\" && parent.nodeName !== \"HTML\") {\n    if (judgeIsLocateNode(parent)) {\n      // 是定位节点\n      locateParentNode = parent;\n      break;\n    }\n    parent = parent.parentNode;\n  }\n\n  // 默认是body\n  if (!locateParentNode) {\n    locateParentNode = document.getElementsByTagName(\"body\")[0];\n  }\n\n  return locateParentNode;\n}\n\nexport const utils = {\n  // 日期操作\n  _date: {\n    // 格式化date\n    format(date, format = \"YYYY-MM-DD HH:mm:ss\") {\n      return dayjs(date).format(format);\n    },\n    add(date = \"\", num = 1, unit = \"day\") {\n      return dayjs(date).add(num, unit);\n    },\n  },\n  // 判断val是否为空\n  isNull(val) {\n    return (\n      val === null || val === void 0 || val === \"\" || val.toString() === \"NaN\"\n    );\n  },\n\n  /**\n   * 获取val值，若为空则使用默认值\n   * @param {*} val\n   * @param {*} dt val为空时的默认值\n   * @param {*} unit 单位\n   * @returns string|number|boolean\n   */\n  getStrVal(val, dt = \"\", unit = \"\") {\n    return !this.isNull(val) ? val + unit : dt;\n  },\n\n  // 获取css属性值的单位，如：px、rem、%\n  getUnit(val = \"\") {\n    return (val.match(/[^.\\d]*/gi) || []).find((item) => item) || \"\";\n  },\n  // 去掉值后的单位：eg： 10px -> 10\n  delValUnit(val, unit) {\n    if (!unit) {\n      unit = this.getUnit(val); //\n      if (!unit) return val;\n    }\n    let reg = new RegExp(unit + \"$\", \"ig\");\n    return val.replace(reg, \"\");\n  },\n\n  // 禁止鼠标右键\n  oncontextmenuDisabled(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    return false;\n  },\n\n  //#region dom操作\n\n  setDOMH(dom, h) {\n    if (!dom || !dom.style) return;\n    dom.style.height = h + \"px\";\n  },\n  setDOMW(dom, w) {\n    if (!dom || !dom.style) return;\n    dom.style.width = w + \"px\";\n  },\n  // 获取dom 宽高\n  getDOMWH(dom) {\n    let _dom = dom || {};\n    return {\n      w: _dom.offsetWidth || 0,\n      h: _dom.offsetHeight || 0,\n    };\n  },\n\n  //#endregion dom操作\n\n  //#region canvas\n\n  // 清除画布\n  clearCanvas(canvas) {\n    if (!canvas) return;\n    let ctx = canvas.getContext(\"2d\");\n    // ctx.save();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // ctx.restore();\n  },\n  // 设置canvas 宽高\n  setCanvasWH(canvas, width, height) {\n    if (!canvas) return;\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n  },\n\n  //#endregion canvas\n\n  /**\n   * 使用ease-in-out曲线作为默认的滚动效果\n   * @param {*} t 当前动画时间\n   * @param {*} b 起点距离\n   * @param {*} c 终点距离\n   * @param {*} d 动画持续时间\n   * @returns \n   */\n  easeInOutQuad(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) return (c / 2) * t * t + b;\n    t--;\n    return (-c / 2) * (t * (t - 2) - 1) + b;\n  },\n  smoothScroll({\n    startPosition, // 开始位置\n    distance, // 距离开始位置的距离\n    duration= 300, // 动画持续时间 ms\n    callBack\n  }={duration: 300}){\n    // 开始动画\n    let startTimeStamp = null\n\n    let render=(timeStamp)=>{\n      !startTimeStamp && (startTimeStamp = timeStamp)\n      let progress = timeStamp - startTimeStamp\n      // console.log(timeStamp, progress, 11111)\n      let run = this.easeInOutQuad(progress, startPosition, distance, duration)\n      callBack && callBack(run)\n      if(progress<duration){\n        requestAnimationFrame(render)\n      }\n    }\n    requestAnimationFrame(render)\n  }\n};\n\n// 边界范围内移动\nexport function moveInBoundary({\n  contentDom, // 边界盒子dom\n  dragDom, // 拖拽的盒子dom\n  left,\n  top,\n}) {\n  let minLeft = 0;\n  let minTop = 0;\n  let maxLeft = contentDom.offsetWidth - dragDom.offsetWidth;\n  let maxTop = contentDom.offsetHeight - dragDom.offsetHeight;\n  if (left < minLeft) {\n    left = minLeft;\n  }\n  if (top < minTop) {\n    top = minTop;\n  }\n  if (left > maxLeft) {\n    left = maxLeft;\n  }\n  if (top > maxTop) {\n    top = maxTop;\n  }\n  return {\n    left,\n    top,\n  };\n}\n\n/**\n * 判断tag是否进入指定禁用行范围\n * @param param0\n * @returns boolean\n */\nexport function tagIsTouchDisabledRow({\n  disabledYMin, // 禁用行Y最小值\n  disabledYMax, // 禁用行Y最大值\n  tagHeight, // tag 的高度\n  tagTop, // tag 的css top值\n}) {\n  return tagTop > disabledYMin - tagHeight && tagTop < disabledYMax;\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"dragBoxRef\",class:[\n  'tagItem',\n  _vm.moving ? 'moving' : '',\n  this.dragable ? 'dragable' : '',\n  _vm.showSelected && _vm.tagItem.selected ? 'selected' : '',\n],style:(_vm.tagItem.style),attrs:{\"tabindex\":\"-2\"},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.moveBox.apply(null, arguments)},\"contextmenu\":function($event){$event.stopPropagation();return _vm.contextmenuHandle.apply(null, arguments)},\"click\":function($event){$event.stopPropagation();return _vm.clickHandle.apply(null, arguments)},\"!blur\":function($event){return _vm.tagBlur.apply(null, arguments)}}},[(_vm.closeTip)?[_c('span',{class:['tagLabel', _vm.tagItem.className]},[_c('tagItemLabel',{attrs:{\"tag-item\":_vm.tagItem,\"showOperateMark\":_vm.showOperateMark}})],1)]:[_c('el-popover',{attrs:{\"popper-class\":\"ganTTTagTip\",\"placement\":\"right\",\"width\":_vm.tipWdith,\"trigger\":\"manual\",\"visible-arrow\":false,\"offset\":0},model:{value:(_vm.visibleTip),callback:function ($$v) {_vm.visibleTip=$$v},expression:\"visibleTip\"}},[_vm._t(\"tagTip\",function(){return [_vm._v(\" \"+_vm._s(_vm.tagItem.label)+\" \")]},{\"tagData\":_vm.tagItem}),_c('span',{class:['tagLabel', _vm.tagItem.className],attrs:{\"slot\":\"reference\"},on:{\"pointerenter\":function($event){return _vm.showTagTip(true)},\"pointermove\":function($event){return _vm.showTagTip(true)},\"pointerleave\":function($event){return _vm.showTagTip(false)}},slot:\"reference\"},[_c('tagItemLabel',{attrs:{\"tag-item\":_vm.tagItem,\"showOperateMark\":_vm.showOperateMark}})],1)],2)]],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"label-yc\"},[_c('i',{class:['taglabel-bf', _vm.tagItem.preIcon || '']}),_vm._v(\" \"+_vm._s(_vm.tagItem.label)+\" \"),(_vm.showOperateMark)?_c('i',{staticClass:\"taglabel-af\"}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <span class=\"label-yc\">\n    <!-- tag前的样式, 比如加个锁样式什么的 -->\n    <i :class=\"['taglabel-bf', tagItem.preIcon || '']\"></i>\n    {{ tagItem.label }}\n    <!-- tag后的样式，显示三点，代表有操作菜单 -->\n    <i class=\"taglabel-af\" v-if=\"showOperateMark\"></i>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'tagItemLabel',\n  props: {\n    tagItem: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    // 是否显示右侧菜单标记\n    showOperateMark: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.label-yc {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n}\n\n.taglabel-bf {\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n// 圆\n.com-circle {\n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  display: block;\n}\n\n.taglabel-af {\n  transform: translateY(-50%);\n  top: 50%;\n  position: absolute;\n  right: 3px;\n  @extend .com-circle;\n\n  &::before {\n    @extend .com-circle;\n    content: ' ';\n    position: relative;\n    top: -6px;\n  }\n\n  &::after {\n    @extend .com-circle;\n    content: ' ';\n    position: relative;\n    top: 3px;\n  }\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./tagItemLabel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./tagItemLabel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./tagItemLabel.vue?vue&type=template&id=043f1741&scoped=true\"\nimport script from \"./tagItemLabel.vue?vue&type=script&lang=js\"\nexport * from \"./tagItemLabel.vue?vue&type=script&lang=js\"\nimport style0 from \"./tagItemLabel.vue?vue&type=style&index=0&id=043f1741&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"043f1741\",\n  null\n  \n)\n\nexport default component.exports","<!-- /**\n * Copyright (c) 2023 重庆隆志科技有限公司. All rights reserved.\n * author: yangfeng\n * blog: https://www.jianshu.com/u/71a7345bdabf\n * date: 2024/01/08\n * remark: 如果要分发gantt-chart-vue源码，需在本文件顶部保留此文件头信息！！\n */ -->\n<!-- 甘特图标签 -->\n<template>\n  <div :class=\"[\n    'tagItem',\n    moving ? 'moving' : '',\n    this.dragable ? 'dragable' : '',\n    showSelected && tagItem.selected ? 'selected' : '',\n  ]\" :style=\"tagItem.style\" @mousedown.stop=\"moveBox\" ref=\"dragBoxRef\" @contextmenu.stop=\"contextmenuHandle\"\n    @click.stop=\"clickHandle\" tabindex=\"-2\" @blur.capture=\"tagBlur\">\n    <!-- 不显示 tip -->\n    <template v-if=\"closeTip\">\n      <!-- 显示的tag值 -->\n      <span :class=\"['tagLabel', tagItem.className]\">\n        <tagItemLabel :tag-item=\"tagItem\" :showOperateMark=\"showOperateMark\" />\n      </span>\n    </template>\n    <template v-else>\n      <el-popover popper-class=\"ganTTTagTip\" placement=\"right\" :width=\"tipWdith\" trigger=\"manual\" v-model=\"visibleTip\"\n        :visible-arrow=\"false\" :offset=\"0\">\n        <!-- tag tip 插槽 -->\n        <slot name=\"tagTip\" :tagData=\"tagItem\">\n          {{ tagItem.label }}\n        </slot>\n        <span :class=\"['tagLabel', tagItem.className]\" slot=\"reference\" @pointerenter=\"showTagTip(true)\" @pointermove=\"showTagTip(true)\"\n          @pointerleave=\"showTagTip(false)\">\n          <!-- 显示的tag值 -->\n          <tagItemLabel :tag-item=\"tagItem\" :showOperateMark=\"showOperateMark\" />\n        </span>\n      </el-popover>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {Popover} from 'element-ui'\nimport { cloneObj, mergeObj, findLocateParentNode, utils } from './index'\nimport tagItemLabel from './tagItemLabel.vue'\nexport default {\n  name: 'tagItem',\n  components: {\n    // element ui\n    ElPopover:Popover,\n\n    tagItemLabel\n  },\n  props: {\n    tagItem: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    // tag是否可以拖拽\n    dragable: {\n      type: Boolean,\n      default: true\n    },\n    // 拖动tag点的回调事件 - 因为需要考虑各种边界条件、因此交由父组件处理\n    tagMoveCallback: {\n      type: Function,\n      default: null\n    },\n    // 是否关闭 tip，默认显示tip\n    closeTip: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示右侧菜单标记, true：tag后的样式，显示三点，代表有操作菜单，false: 不显示\n    showOperateMark: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示tag选中 - false 不会显示选中效果\n    showSelected: {\n      type: Boolean,\n      default: false\n    },\n    // tooltip 宽度\n    tipWdith: {\n      type: [String,Number],\n      default: 206\n    },\n  },\n  data() {\n    return {\n      utils,\n      moving: false, // 正在拖拽盒子\n      changeWHing: false, // 正在拖拽点改变宽高\n      visibleTip: false,\n      // 解决tag click 与 tag move事件冲突问题\n      moved: false, // 前一刻是否移动过 - 用于区分点击事件和move事件\n      changeTimer: null\n    }\n  },\n  methods: {\n    // 右键菜单\n    contextmenuHandle(e) {\n      this.$emit('tagContextmenu', {\n        e,\n        tagItem: this.tagItem,\n        // 其他参数直接回传，父组件不必重新计算\n        dragable: this.dragable,\n        closeTip: this.closeTip,\n        showOperateMark: this.showOperateMark\n      })\n      return utils.oncontextmenuDisabled(e)\n    },\n    tagBlur(){\n      // console.log('tagBlur 111')\n      this.$emit('tagBlur')\n    },\n    // 因为点击tag 会触发mousedown，mouseup，但不会触发mousemove，因此可以利用这点来区分点击还是拖动\n    clickHandle(e) {\n      if(this.moving || this.moved) return // 正在移动或者移动过，都不算作点击事件 \n      // console.log('click', e)\n      this.$emit('tagClick', {\n        e,\n        tagItem: this.tagItem,\n        // 其他参数直接回传，父组件不必重新计算\n        dragable: this.dragable,\n        closeTip: this.closeTip,\n        showOperateMark: this.showOperateMark\n      })\n    },\n    // 获取到浏览器左上角的距离\n    getToContainerXY(e) {\n      return {\n        x: e.x || e.pageX,\n        y: e.y || e.pageY\n      }\n    },\n    // 添加移除鼠标事件\n    addRemoveMouseEvent(callback) {\n      // 鼠标移动\n      let moveHandle = (moveE) => {\n        callback && callback(moveE)\n      }\n\n      // 移除鼠标事件\n      let clearMouseEvent = () => {\n        window.removeEventListener('mousemove', moveHandle)\n        window.removeEventListener('mouseup', clearMouseEvent)\n        this.changeChangeWHing(false)\n        this.changeMoveing(false)\n        this.$emit('changeEnd')\n      }\n      window.addEventListener('mousemove', moveHandle, false)\n      window.addEventListener('mouseup', clearMouseEvent, false)\n    },\n    // changeTageItem(obj = {}) {\n    //   this.$emit('change', mergeObj({\n    //     ...this.tagItem\n    //   }, obj))\n    // },\n    changeChangeWHing(bool = false) {\n      this.changeWHing = bool\n    },\n    changeMoveing(bool = false) {\n      this.moving = bool\n      if (this.moving) { // 关闭tag详情\n        this.showTagTip(false)\n      }\n    },\n    moveBox(e) {\n      // console.log('mousedown', e)\n      if (e && +e.button === 2) return // 鼠标右键不触发\n      if (!this.dragable) return // 不可拖拽\n      if (this.changeWHing) return // 正在拖拽点改变宽高，返回\n\n      let recordTagItem = cloneObj(this.tagItem)\n      this.changeMoveing(true)\n\n      this.$emit('tagDragStart', {\n        tagItem: this.tagItem\n      })\n      // 都以浏览器为左边和上面为基准，因为鼠标事件获取到的是距离浏览器的距离\n      // 1.获取拖拽盒子有定位的父节点距离浏览器的距离\n      let LocateParentNode = findLocateParentNode(this.$refs['dragBoxRef'])\n      let canvasBoxLeft = 0\n      let canvvasBoxTop = 0\n      if (LocateParentNode) {\n        let info = LocateParentNode.getBoundingClientRect()\n        canvasBoxLeft = info.left\n        canvvasBoxTop = info.top\n      }\n\n      // 2.被拖拽盒子距离有定位父节点左、上的距离信息\n      let boxLeft = this.$refs['dragBoxRef'].offsetLeft\n      let boxTop = this.$refs['dragBoxRef'].offsetTop\n\n      // 3.鼠标在被拖拽盒子中按下的位置距离信息【距离浏览器】\n      let { x: mouseLeft, y: mouseTop } = this.getToContainerXY(e) // 鼠标点击位置，距离画布边界的距离\n\n      // 4.计算出鼠标按下点距离拖拽盒子左侧、顶部的距离 保证后续拖拽时鼠标位置相对拖拽盒子不变\n      // 若发现拖动有偏移考虑是否是边框引起的\n      let toBox_X = mouseLeft - boxLeft - canvasBoxLeft // 鼠标距离盒子左侧距离 鼠标距离浏览器左侧距离 - 拖拽盒子距离有定位父节点左侧距离 - 有定位父节点距离左侧距离浏览器左侧距离\n      let toBox_Y = mouseTop - boxTop - canvvasBoxTop // 鼠标距离盒子顶部距离\n\n      this.addRemoveMouseEvent((moveE) => {\n        let { x, y } = this.getToContainerXY(moveE) // 鼠标点击位置，距离画布边界的距离\n\n        // 以防万一 一定要重新获取！！ -- 不然在父级同步修改滚动距离时会计算错误\n        let info = LocateParentNode.getBoundingClientRect()\n        let canvasBoxLeft = info.left\n        let canvvasBoxTop = info.top\n\n        let left = x - toBox_X - canvasBoxLeft\n        let top = y - toBox_Y - canvvasBoxTop\n        this.tagMoveCallback && this.tagMoveCallback(\n          moveE, // 鼠标event\n          {\n            tagItemDom: this.$refs['dragBoxRef'], // 当前拖动的tag dom\n            tagItemOld: recordTagItem, // 当前拖动前的item\n            tagItem: this.tagItem, // 当前拖动的item\n            left, // 拖动盒子现在的left 像素\n            top, // 拖动盒子现在的top 像素\n\n            toBox_X,\n            toBox_Y\n          }\n        )\n\n        // 移动后延迟清空，延迟的目的是为了先触发clickHandle判断\n        this.moved = true // 记录移动时间\n        clearTimeout(this.changeTimer)\n        // 定时清空，代表鼠标移动结束\n        this.changeTimer = setTimeout(()=>{\n          this.moved = false\n        }, 500)\n      })\n    },\n    showTagTip(bool = false) {\n      if (this.moving) {\n        this.visibleTip = false\n      } else {\n        this.visibleTip = bool\n      }\n    },\n  },\n  mounted() {\n  },\n  beforeDestroy(){\n    clearTimeout(this.changeTimer)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// 画布内tag\n.tagItem {\n  position: absolute;\n  width: 0;\n  height: 0;\n  left: 0;\n  top: 0;\n  z-index: 4;\n  background-color: #365be4;\n  // padding: 3px;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  transition: transform ease 0.2s;\n\n  &.dragable {\n    cursor: move;\n  }\n\n  &.moving {\n    // cursor: move;\n    box-shadow: rgb(1, 10, 21) 0px 0px 16px;\n    z-index: 9;\n  }\n\n  // 是否选中\n  &.selected {\n    outline: 2px dashed red;\n  }\n\n  .tagLabel {\n    // line-height: normal;\n    // pointer-events: none;\n    user-select: none;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0px 15px;\n    box-sizing: border-box;\n  }\n\n  :deep(>span) {\n    width: 100%;\n    height: 100%;\n  }\n\n  :deep(.el-popover__reference-wrapper) {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n<style lang=\"scss\">\n$theme: rgba(17, 21, 43, 0.75);\n\n.ganTTTagTip {\n  background-color: $theme;\n  color: #ffffff;\n  box-shadow: 0px 0px 12px 0px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 10px;\n  font-family: PingFangSC-Medium;\n  font-size: 12px;\n  color: #FFFFFF;\n  letter-spacing: 0;\n  line-height: 20px;\n  font-weight: 500;\n\n  $mg: 5px;\n\n  &.el-popper[x-placement^=left] {\n    margin-right: $mg;\n\n    .popper__arrow::after {\n      border-left-color: $theme;\n    }\n  }\n\n  &.el-popper[x-placement^=right] {\n    margin-left: $mg;\n\n    .popper__arrow::after {\n      border-right-color: $theme;\n    }\n  }\n\n  &.el-popper[x-placement^=top] {\n    margin-bottom: $mg;\n\n    .popper__arrow::after {\n      border-top-color: $theme;\n    }\n  }\n\n  &.el-popper[x-placement^=bottom] {\n    margin-top: $mg;\n\n    .popper__arrow::after {\n      border-bottom-color: $theme;\n    }\n  }\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./tagItem.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./tagItem.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./tagItem.vue?vue&type=template&id=d927a656&scoped=true\"\nimport script from \"./tagItem.vue?vue&type=script&lang=js\"\nexport * from \"./tagItem.vue?vue&type=script&lang=js\"\nimport style0 from \"./tagItem.vue?vue&type=style&index=0&id=d927a656&prod&lang=scss&scoped=true\"\nimport style1 from \"./tagItem.vue?vue&type=style&index=1&id=d927a656&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d927a656\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.visible),expression:\"visible\"}],staticClass:\"timeLine\",style:({ left: _vm.left })},[_c('span',{staticClass:\"timeBox\",style:({ backgroundColor: _vm.color })},[_c('i',{style:({ borderTopColor: _vm.color })}),_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('span',{staticClass:\"line\",style:({ borderLeftColor: _vm.color })})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- 纵向时间线 -->\n<template>\n  <div class=\"timeLine\" v-show=\"visible\" :style=\"{ left: left }\">\n    <span class=\"timeBox\" :style=\"{ backgroundColor: color }\">\n      <!-- 底部的箭头 -->\n      <i :style=\"{ borderTopColor: color }\"></i>\n      {{ title }}\n    </span>\n    <span class=\"line\" :style=\"{ borderLeftColor: color }\"></span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'yTimeLine',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    left: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: '时间线'\n    },\n    // 颜色\n    color: {\n      type: String,\n      default: '#000000'\n    }\n  },\n  data() {\n    return {}\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.timeLine {\n  position: absolute;\n  left: 300px;\n  top: 0;\n  height: 100%;\n  z-index: 10;\n  pointer-events: none;\n\n  .line {\n    height: 100%;\n    width: 1px;\n    border-left: 1px #000000 dashed;\n    position: absolute;\n    left: 0;\n    top: 0;\n    transform: translateX(-50%);\n    z-index: 1;\n  }\n\n  .timeBox {\n    margin-top: -5px;\n    left: 0;\n    position: absolute;\n    top: 0;\n    background-color: #000000;\n    border-radius: 1px;\n    width: 44px;\n    height: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    transform: translate(-50%, -100%);\n    color: #ffffff;\n    z-index: 2;\n    font-size: 14px;\n    font-weight: normal;\n\n    $wd: 5px;\n    >i{\n      position: absolute;\n      left: 50%;\n      border-top: $wd solid #000000;\n      border-left: $wd solid transparent;\n      border-bottom: $wd solid transparent;\n      border-right: $wd solid transparent;\n      bottom: 1px;\n      transform: translate(-50%, 100%);\n    }\n  }\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./yTimeLine.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./yTimeLine.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./yTimeLine.vue?vue&type=template&id=7573238b&scoped=true\"\nimport script from \"./yTimeLine.vue?vue&type=script&lang=js\"\nexport * from \"./yTimeLine.vue?vue&type=script&lang=js\"\nimport style0 from \"./yTimeLine.vue?vue&type=style&index=0&id=7573238b&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7573238b\",\n  null\n  \n)\n\nexport default component.exports","<!-- /**\n * Copyright (c) 2023 重庆隆志科技有限公司. All rights reserved.\n * author: yangfeng\n * blog: https://www.jianshu.com/u/71a7345bdabf\n * date: 2024/01/08\n * remark: 如果要分发gantt-chart-vue源码，需在本文件顶部保留此文件头信息！！\n */ -->\n\n<!-- 甘特图vue2\n\n  author：yangfeng\n  start date：2023/11/xx\n\n  主要是将甘特图每行渲染出来，将每个tag的起止时间放到正确位置\n\n  实现思路：\n 【.】计算宽高 -- finished\n 【.】绘制网格线、禁用行色块，记得先清空 -- finished\n  这里特别说明下网格：\n  网格分三部分：1.css .sLine 画的标题分割线 2.canvasGridRefDom 画的内容区域网格 3.canvasGanttRefDom 补充\n  这么麻烦？因为要考虑到横向滚动，纵向滚动【后续可以扩展的功能】，再加上overflow：hidden让子元素无法显示，\n  若设置为visible又无法滚动，或者会让内部需要隐藏的元素又显示出来，最终用这三步才实现~~~\n 【.】整个甘特图支持横向滚动条，宽度足够时横向自适应铺满，不够时显示横向滚动。重要！-- finished\n 【.】标题栏颜色--外部自行修改css实现，不提取到props了，减少参数 -- finished\n 【.】渲染初始 tag -- finished\n 【.】底部支持显示统计行 -- finished\n 【.】拖动tag时显示时间线 -- finished\n 【.】点击显示标记线，标记线多个甘特图联动 .sync 实现 -- finished\n 【.】画布内右键菜单，抛出事件 -- finished\n 【.】提供内部新增、修改、删除tag的方法 -- finished\n 【.】左侧任务栏提供操作菜单，可以配置全部菜单或者单独配置某行菜单，支持按钮禁用 -- finished\n 【.】提供甘特图只读模式readOnly -- finished\n 【.】tag拖动，结束后弹窗选择起止时间，可选择是否开启此功能 -- finished\n 【.】tag tooltip 采用 el-popover实现, 默认显示tag的tooltip、支持单个tag的tip关闭、使用插槽父组件可自行修改tag tooltip内容。\n  tip 显示的优先级为：当前tag 设置的closeTip > 当前tag对应legend设置的closeTip > 最后都没设置的默认显示tip -- finished\n 【.】tag 右键菜单功能，菜单在legend中配置，点击菜单按钮抛出参数 -- finished\n 【.】tag 支持点击显示选中效果tag selected为true即可，可以全局关闭，提供获取所有选中项，清空所有选中项api -- finished\n 【.】tag 前可以显示自定义图标，就是个类名放到tag前的<i> 标签里面，推荐使用iconfont -- finished\n 【.】tag新增 hide 字段，可控制单个tag是否显示。hide 为 true 即可隐藏此tag -- finished\n 【.】在甘特图中标记当前时间-时间线，前提是当前时间在任务开始结束区间内 -- finished\n 【.】甘特图支持给有数据行设置最小高度 -- finished\n 【.】控制tag拖动是否可以拖动 1.配置legend中当前行类型tag的dragable 2.配置rows中每个tag 的dragable -- finished\n 【.】高度自适应实现思路【注意：若父级盒子未设置高度，则初始默认撑开，若设置了高度，则限定在高度范围内】\n      gantt-chart-wrap 盒子高度是外层盒子的高度，需要自适应的。减去底部合计行，顶部时间标题行高度是剩下的拖拽画布高度，注意因为tag在里面可以拖动，因此考虑生成上下滚动条\n      注意：甘特图高度自适应是指将甘特图限定在父容器高度范围内，若不想显示纵向滚动条，则关闭自适应高度的功能，甘特图将撑开，此时父容器不用设置高度\n 【.】甘特图实现任务持续时间加减n天显示，tag拖动到有滚动条边界时时滚动条滚动  -- finished\n 【.】甘特图实现tag拖动时，后面tag的避让效果。特别注意：拖动结束后需要重新触发甘特图init方法才会清除避让信息！这部分是垃圾数据，只是为了有个避让效果，和甘特图本身数据无关！  -- finished\n\n  待自行优化点，也可以选择不优化，优化后可提升一点性能，我懒得去改：\n  1.tooltip 单独提出来，只渲染一次。现在采用el-popover每个tag都会生成自己的tooltip，导致dom有点浪费。\n-->\n<template>\n  <div class=\"gantt-chart-wrap\">\n    <!-- 顶部间隙,留给时间线展示用 -->\n    <div class=\"gap\" :style=\"{ background: ganttBgColor }\"></div>\n    <div :style=\"{ background: ganttBgColor }\" tabindex=\"-2\" class=\"gantt-chart-box\" ref=\"ganttBoxRefDom\"\n      @click=\"ganTTClick\" @blur=\"ganTTblur\" @contextmenu=\"utils.oncontextmenuDisabled\">\n      <!-- 纵向时间线 - 显示当前时间 -->\n      <yTimeLine v-bind=\"currentTimeLine\" />\n      <!-- 纵向时间线 - 点击图时显示的时间线 -->\n      <yTimeLine v-bind=\"markLine\" />\n      <!-- 纵向时间线 - 移动tag时显示的 -->\n      <yTimeLine v-bind=\"movingTimeLine\" style=\"z-index: 20;\" />\n\n      <!-- canvas 绘制标题网格线 -->\n      <canvas ref=\"canvasGanttRefDom\">您的浏览器不支持 HTML5 canvas标签</canvas>\n\n      <!-- 顶部时间行 -->\n      <div class=\"row-header\" :style=\"{ height: paintTop }\">\n        <span class=\"gt-title\" ref=\"titleRefDom\" :style=\"{ width: paintLeft, height: paintTop }\">{{ title }}</span>\n        <!-- 标题列 -->\n        <div class=\"header-right\">\n          <div class=\"scrollX\" ref=\"headerBoxRefDom\">\n            <span class=\"paint-col\" v-for=\"(col, cIndex) in colsInfo\" :key=\"cIndex\">\n              <span class=\"name\">{{ utils._date.format(col.t, timeFormat) }}</span>\n              <!-- 分割线 -->\n              <i class=\"sLine\" :style=\"{ background: gridLineColor }\"></i>\n            </span>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"row-bottom\" :style=\"{ height: ganTTBottomHeight ? ganTTBottomHeight + 'px' : '' }\">\n        <!-- 第一列-任务列，每行对应的任务名称 -->\n        <div class=\"box-left scrollY\" :style=\"{ width: paintLeft }\">\n          <div :class=\"{\n            'paint-row': true,\n            'disabled': row.disabled,\n            'canSelected': taskMenuList.length || row.taskMenuList,\n            'selected': taskMenu.selectRow && taskMenu.selectRow.label === row.label\n          }\" v-for=\"(row, rIndex) in rowsInfo\" :key=\"rIndex\"\n            :style=\"{ 'backgroundColor': row.disabled ? disabledBgColor : '' }\"\n            @contextmenu.stop=\"taskMenu_Open($event, row)\">\n            <span class=\"name\">{{ row.label }}</span>\n            <!-- 分割线 -->\n            <i class=\"sLine\" :style=\"{ background: gridLineColor }\"></i>\n          </div>\n        </div>\n        <!-- 画布盒子 -->\n        <div class=\"box-right\" ref=\"boxRightRefDom\">\n          <!-- 真实画布区域 -->\n          <div class=\"box-paint scrollY\" ref=\"paintBoxRefDom\" style=\"text-align: right;\">\n            <!-- canvas 绘制色块、网格线 -->\n            <canvas ref=\"canvasGridRefDom\">您的浏览器不支持 HTML5 canvas标签</canvas>\n            <!-- canvas 绘制参考线 -->\n            <canvas ref=\"canvasGuideBoxRefDom\" style=\"z-index: 99;\">您的浏览器不支持 HTML5 canvas标签</canvas>\n\n            <!-- 甘特图右键菜单 -->\n            <div class=\"rightClickMenu\" ref=\"rightClickMenuRefDom\" @contextmenu=\"utils.oncontextmenuDisabled\">\n              <ul>\n                <li :class=\"{ 'disabled': mItem.disabled }\" @click.stop=\"rightClickMenuEvent($event, mItem, btnIndex)\"\n                  @contextmenu.stop=\"utils.oncontextmenuDisabled\" v-for=\"(mItem, btnIndex) in rightClickMenuList\"\n                  :key=\"`${mItem}-${btnIndex}}}`\">{{\n                    mItem.label }}</li>\n              </ul>\n            </div>\n\n            <!-- tag右侧操作菜单 -->\n            <ul class=\"tag-menu\" ref=\"tagMenuRefDom\" v-show=\"tagMenu.visible\" :style=\"tagMenu.style\"\n              @click=\"autoCloseTagMenu = false\">\n              <li v-for=\"(tagBtnItem, tagBtnIndex) in tagMenu.btnList\" :key=\"`${tagBtnItem.label}-${tagBtnIndex}}`\"\n                :class=\"{ 'disabled': tagBtnItem.disabled }\"\n                @click.stop=\"tagMenuBtnClickHandle($event, tagBtnItem, tagBtnIndex)\"\n                @contextmenu.stop=\"utils.oncontextmenuDisabled\">\n                {{ tagBtnItem.label }}</li>\n            </ul>\n\n            <!-- 内部标签 -->\n            <template v-for=\"item in tagList\">\n              <tagItem :key=\"item.tagId\" v-if=\"!item.hide\" :tipWdith=\"tipWdith\" :tagItem=\"item\" :tagMoveCallback=\"tagMove\"\n                @tagDragStart=\"tagDragStart\" @changeEnd=\"tagChangeEnd\"\n                :style=\"{ background: getLegendConfig(item).color || '#000000' }\" :dragable=\"tagItemDragable(item)\"\n                :closeTip=\"tagItemCloseTip(item)\" :showOperateMark=\"tagHasOperateMenu(item)\" :showSelected=\"showSelected\"\n                @tagContextmenu=\"tagContextmenuHandle\" @tagClick=\"tagClickHandle\" @tagBlur=\"tagblurHandle\">\n\n                <!-- tag hover显示的内容插槽 -->\n                <template #tagTip=\"{ tagData }\">\n                  <slot name=\"tagTip\" :tagData=\"tagData\"></slot>\n                </template>\n\n              </tagItem>\n            </template>\n          </div>\n          <!-- 横向滚动条,借助div，这里将功能独立出去是为了让滚动条高度和画布高度分离，不影响计算 -->\n          <div class=\"scrollXBar\" ref=\"scrollXBarDom\">\n            <div :style=\"{ width: this.paintBoxInfo.width + 'px' }\"></div>\n          </div>\n        </div>\n\n        <!-- 纵向滚动条,借助div，这里将功能独立出去是为了让滚动条高度和画布高度分离，不影响计算 -->\n        <div class=\"scrollYBar\" ref=\"scrollYBarDom\">\n          <div :style=\"{ height: this.paintBoxInfo.height + 'px' }\"></div>\n        </div>\n      </div>\n\n      <!-- 底部-展示的统计行 -->\n      <div class=\"stat-bottom\" v-for=\"(suArr, suIndex) in summaryRows\" :key=\"suIndex\">\n        <template v-if=\"suArr.length > 0\">\n          <div class=\"stat-bottom_title\" :style=\"{ width: paintLeft, minHeight: rowMinRowHeight }\">{{ suArr[0] }}</div>\n          <div class=\"stat-bottom_right\">\n            <div class=\"scrollX\">\n              <span class=\"stat-bottom_col\" v-for=\"(col, cIndex) in colsInfo\" :key=\"`${suIndex}-${cIndex}`\"\n                :style=\"{ width: `${colsInfo[cIndex] ? colsInfo[cIndex].w : 0}px` }\">\n                <span class=\"name\">{{ suArr[cIndex + 1] }}</span>\n                <!-- 分割线 -->\n                <i class=\"sLine\" :style=\"{ background: gridLineColor }\"></i>\n              </span>\n            </div>\n          </div>\n        </template>\n      </div>\n\n      <!-- 左侧任务列操作菜单 -->\n      <ul class=\"task-menu\" ref=\"taskMenuRefDom\" v-show=\"taskMenu.visible\" :style=\"taskMenu.style\">\n        <li v-for=\"(taskBtnItem, taskBtnIndex) in taskMenu.btnList\" :key=\"`${taskBtnItem.label}-${taskBtnIndex}}`\"\n          :class=\"{ 'disabled': taskBtnItem.disabled }\" @click.stop=\"taskMenuBtnClick($event, taskBtnItem, taskBtnIndex)\"\n          @contextmenu.stop=\"utils.oncontextmenuDisabled\">\n          {{ taskBtnItem.label }}</li>\n      </ul>\n    </div>\n\n    <!-- tag时间选择 -->\n    <el-dialog title=\"时间选择\" :visible.sync=\"tagTimeDialog.visible\" width=\"450px\" :close-on-click-modal=\"false\">\n      <div>\n        <el-date-picker v-model=\"tagTimeDialog.timeRange\" type=\"datetimerange\" :picker-options=\"pickerOptions\"\n          range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\"\n          value-format=\"yyyy/MM/dd HH:mm:ss\">\n        </el-date-picker>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeTagTimeDialog\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmTagTimeDlaiog\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\n\nimport { Message, Button, Dialog, DatePicker } from 'element-ui'\nimport { utils, moveInBoundary, tagIsTouchDisabledRow, uuid, cloneObj } from './index'\nimport tagItem from './tagItem.vue'\nimport yTimeLine from './yTimeLine.vue'\n\nlet resizeObserver;\nconst rowPaddingTop = 4; // 单元格纵向padding\nconst rowContentHeight = 28 // 单元格行高，不包含上下padding 【注意：不要小于tagHeight高度】\nconst tagHeight = 28 // tag 高度\nconst tagMarginTop = 5 // tag 纵向margin高度\nconst headerCellMinWidth = 100 // 顶部标题栏，每列最小宽度\nlet minSowTagRow = 2 // 有数据时，单行内至少显示几行tag - 需求是任务行不能太矮，至少也要显示两行高度\n\n// 计算的高度-不用改\nconst minRowHeight = 2 * rowPaddingTop + Math.min(...[tagHeight, rowContentHeight]) // 行最小高度 - 无数据的行\nminSowTagRow = minSowTagRow < 0 ? 1 : minSowTagRow\nlet hasTagsDataMinRowHeight = 2 * rowPaddingTop + minSowTagRow * tagHeight + (minSowTagRow - 1) * tagMarginTop // -有数据的行 - 至少显示几行tag【需求：有数据的行高度要高点】 - 第一行 tag 不需要margin-top\nhasTagsDataMinRowHeight = Math.max(...[hasTagsDataMinRowHeight, minRowHeight]) // 有数据行的最小高度\n\nexport default {\n  name: 'gantt-chart-vue',\n  // model: {\n  //   prop: 'markLineTime',\n  //   event: 'changeMarkLineTime'\n  // },\n  components: {\n    // element ui\n    ElButton: Button,\n    ElDialog: Dialog,\n    ElDatePicker: DatePicker,\n\n    tagItem,\n    yTimeLine,\n  },\n  props: {\n    // 是否只读，最高优先级，禁用所有编辑功能，如拖拽，右键菜单等\n    readOnly: {\n      type: Boolean,\n      default: false\n    },\n    // 禁用行是否不触发事件，tag不可拖动到禁用行，不触发右键菜单 true：禁止拖入 false：可以拖入\n    disabledRowSilent: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示tag选中 - false 不会显示选中效果\n    showSelected: {\n      type: Boolean,\n      default: false\n    },\n\n    /*\n     是否开启甘特图高度自适应：\n     true：限定在父级设置的高度范围内，超出将显示纵向滚动条，如果父容器未设置高度，将以初始渲染的高度为准，后续都限定在此高度范围内\n     false：甘特图自动撑开，特别注意父容器不要设置高度！！！\n    */\n    selfAdaptionGanTTHeight: {\n      type: Boolean,\n      default: true\n    },\n\n    // 甘特图类型\n    legend: {\n      type: Array,\n      // required: true,\n      default() {\n        return [\n          // {\n          //   label: '模型预排',\n          //   color: '#365ce5',\n          //   type: 1, // 用于判定同一网格行内具体所属行\n          //   dragable: true, // 此类型tag是否可以拖动，也可以在rows中配置单个tag是否可以拖动\n          //   closeTip: false, // 显示tag tip，也可以在rows中配置单个tag是否关闭提示\n          //   btnList: [ // 右键菜单按钮列表\n          //     {\n          //       label: '开启tag选中',\n          //       disabled: false\n          //     },\n          //     {\n          //       label: '关闭tag选中',\n          //       disabled: false\n          //     },\n          //     {\n          //       label: 'tag前添加图标',\n          //       disabled: false\n          //     }\n          //   ]\n          // },\n          // {\n          //   label: '生产实绩',\n          //   color: '#39c236',\n          //   type: 2, // 用于判定同一网格行内具体所属行\n          // },\n          // {\n          //   label: '计划停机1',\n          //   color: '#f5212d',\n          //   type: 3, // 用于判定同一网格行内具体所属行\n          //   closeTip: true // 关闭此大类的tag tip，若tag自行设置有closeTip，则以tag 内的为准\n          // },\n          // {\n          //   label: '计划停机2',\n          //   color: '#ff9c1b',\n          //   type: 4 // 用于判定同一网格行内具体所属行\n          // }\n        ]\n      }\n    },\n    // 甘特图标题\n    title: {\n      type: String,\n      // required: true,\n      default: '甘特图'\n    },\n    // 初始显示的甘特图列开始时间\n    startDate: {\n      type: String,\n      // required: true,\n      default: '2023/12/01'\n    },\n    // 任务持续时间 - 从开始时间计算\n    dateDuration: {\n      type: Number,\n      // required: true,\n      default: 7\n    },\n\n    /*\n    说明：\n    甘特图为7+2天，如果tag往左移出了，甘特图时间轴需要 - 1天；往右移出则 + 1 天，此时甘特图需要出现滚动条\n    */\n    // 除了dateDuration任务持续时间，当tag横向拖动到左边界时，可以往前几天时间\n    decreaseDayNum: {\n      type: Number,\n      default: 0,\n      validator: function (value) {\n        return value >= 0\n      }\n    },\n    // 除了dateDuration任务持续时间，当tag横向拖动到右边界时，可以往后几天时间\n    IncreaseDayNum: {\n      type: Number,\n      default: 0,\n      validator: function (value) {\n        return value >= 0\n      }\n    },\n\n    // 列-时间显示成的格式\n    timeFormat: {\n      type: String,\n      default: 'HH:mm'\n    },\n    // 甘特图行\n    rows: {\n      type: Array,\n      // required: true,\n      default: () => [\n        // {\n        //   label: '项目A',\n        //   tags: [ // 注意：属性在 backfillTag 方法中声明才会生效，其他数据会统一放到 tag.data 中,属于不被承认的外部数据，虽然也能实现。。。\n        //     {\n        //       startTime: '2023/12/01 02:10:00',\n        //       endTime: '2023/12/03 06:10:00',\n        //       label: '关闭tag的hover tip效果',\n        //       type: 2,\n        //       closeTip: true, // 不显示此tag的tip，注意：只有true|false才会生效\n        //       dragable: true, // 此类型tag是否可以拖动,优先级最高，不设置将取legend的dragable，都没有则禁止拖动，注意：只有true|false才会生效\n        //       className: 'tagSpecial', // 可单独设置tag样式名\n        //       selected: false, // 当前tag是否选中-有选中样式\n        //       preIcon: 'el-icon-video-camera-solid', // tag前的图标\n        //       hide: false // 是否隐藏此tag\n        //     },\n        //     {\n        //       startTime: '2023/12/01 02:10:00',\n        //       endTime: '2023/12/03 06:10:00',\n        //       label: '关闭此类型tip-1',\n        //       type: 3\n        //     },\n        //     {\n        //       startTime: '2023/12/01 02:10:00',\n        //       endTime: '2023/12/03 06:10:00',\n        //       label: '计划停机2,完成度90%',\n        //       type: 4\n        //     },\n        //     {\n        //       startTime: '2023/12/03 08:00:00',\n        //       endTime: '2023/12/05 10:10:00',\n        //       label: '关闭此类型tip-2',\n        //       type: 3\n        //     },\n        //     {\n        //       startTime: '2023/12/06 02:10:00',\n        //       endTime: '2023/12/07 06:00:00',\n        //       label: 'tag右键菜单展示demo',\n        //       type: 1\n        //     },\n        //   ]\n        // },\n        // {\n        //   label: '项目B',\n        //   tags: [\n        //     {\n        //       startTime: '2023/12/06 02:10:00',\n        //       endTime: '2023/12/07 06:10:00',\n        //       label: '模型预排1111,xx吨,完成度90%',\n        //       type: 1\n        //     },\n        //     {\n        //       startTime: '2023/12/01 02:10:00',\n        //       endTime: '2023/12/03 06:10:00',\n        //       label: 'xxxx,xx吨,完成度90%',\n        //       type: 3\n        //     },\n        //   ]\n        // },\n        // {\n        //   label: '项目C',\n        //   tags: []\n        // },\n        // {\n        //   label: '项目D',\n        //   tags: [\n        //     {\n        //       startTime: '2023/12/01 02:10:00',\n        //       endTime: '2023/12/03 06:10:00',\n        //       label: 'xxxx,xx吨,完成度90%',\n        //       type: 1\n        //     },\n        //   ]\n        // },\n        // {\n        //   label: '项目E',\n        //   tags: []\n        // },\n        // {\n        //   label: '项目F',\n        //   tags: []\n        // },\n        // {\n        //   label: '项目G',\n        //   disabled: true, // 禁止响应事件\n        //   tags: []\n        // },\n        // {\n        //   label: '项目H',\n        //   tags: []\n        // },\n      ]\n    },\n    // 甘特图底部统计行\n    summaryRows: {\n      type: Array,\n      default() {\n        return [\n          // ['合计1', '1', '2', '3', '1', '2', '3'],\n          // ['合计2', 'a', 'b', 'c', 'd', 'e', 'f'],\n        ]\n      }\n    },\n    // 是否显示标线 - 只读模式下标线功能未禁止\n    showMarkLine: {\n      type: Boolean,\n      default: false\n    },\n    markLineTime: { // 标记线对应的时间\n      type: String,\n      default: ''\n    },\n\n    // 甘特图右键菜单里面的按钮\n    rightClickMenuList: {\n      type: Array,\n      default() {\n        return [\n          // {\n          //   label: '新增模型',\n          //   disabled: false\n          // },\n          // {\n          //   label: '新增停机',\n          //   disabled: false // 是否禁用\n          // }\n        ]\n      }\n    },\n    // 任务列菜单 - 每行的菜单都一样，若想给某行单独设置不同的菜单，则给row 对应行赋值 taskMenuList\n    taskMenuList: {\n      type: Array,\n      default() {\n        return [\n          // {\n          //   label: '停产',\n          //   disabled: false // 是否禁用\n          // },\n          // {\n          //   label: '启用',\n          //   disabled: false // 是否禁用\n          // }\n        ]\n      }\n    },\n\n    // tag拖拽结束是否显示时间选择框\n    dragTagEndShowTimeDialog: {\n      type: Boolean,\n      default: false\n    },\n\n    // tag拖动的避让效果，只是单纯显示，原理: 修改translateX(x)，这样不会对原始数据造成影响\n    //【注意!!!：开启此功能后，将导致某些tag含有translateX 偏移，从而让甘特图表现异常-正确用法时每次拖动结束【比如调接扣计算】，然后重新渲染整个甘特图】\n    openTagMoveDodgeAnimate: {\n      type: Boolean,\n      default: false\n    },\n\n    // tooltip 宽度\n    tipWdith: {\n      type: [String,Number],\n      default: 206\n    },\n\n    // 样式部分 >>\n    // 甘特图背景色\n    ganttBgColor: {\n      type: String,\n      default: '#ffffff'\n    },\n    // 停用行-背景色\n    disabledBgColor: {\n      type: String,\n      default: '#ececec'\n    },\n    // 画布左侧 “类目列” 宽\n    paintLeft: {\n      type: String,\n      default: '80px'\n    },\n    // 画布顶部 “时间列” 高\n    paintTop: {\n      type: String,\n      default: '40px'\n    },\n    // 网格线的颜色\n    gridLineColor: {\n      type: String,\n      default: '#dddddd'\n    }\n    // 样式部分 <<\n  },\n  data() {\n    return {\n      rowMinRowHeight: minRowHeight + 'px',\n      ganTTBottomHeight: 0, // 底部剩余最大高度 - 用于 自适应高度 功能\n      utils,\n\n      isFirstInit: true, // 是否初次渲染\n      scrolledXPercent: 0, // 记录横向滚动的百分比 - 甘特图resize后需要保证横向滚动百分比不变，也就是之前列从哪里开始的，resize后也从哪里开始  \n      // 防抖\n      tickTimer: null,\n      scrollTimer: null,\n      rowsInfo: [], // 行信息\n      colsInfo: [], // 列信息\n      // 画布内拖拽区域\n      paintBoxInfo: {\n        width: 0,\n        height: 0\n      },\n      tagList: [], // 画布中的tag\n\n      // 正在拖拽的信息\n      draging: {\n        tagItemOld: {}, // 拖拽前tag Data\n        tagItem: {}, // 拖拽的tag Data\n        tagItemDom: null, // 拖拽的tag Dom\n        left: 0,\n        top: 0\n      },\n      historyDraging: { // 存储上次拖拽的信息，用于优化交互效果\n        left: null,\n        top: null\n      },\n      dodgeTagsInfo: {}, // 格式为：{tagId:translateX(xx)} 存储避让的tag信息，拖拽结束先显示避让后的效果\n\n      // 移动tag时显示的，纵向时间线\n      movingTimeLine: {\n        visible: false,\n        left: '0px',\n        title: '',\n        color: '#000000'\n      },\n      // 点击图时显示的时间线\n      markLine: {\n        visible: false,\n        left: '0px',\n        title: '',\n        color: 'red'\n      },\n      // 显示当前时间的时间线\n      currentTimeLine: {\n        visible: false,\n        left: '0px',\n        title: '',\n        color: '#000000'\n      },\n      tickCurrentTimer: null, // 定时获取当前时间的定时器\n\n      // 右键菜单相关\n      rightMenuTemObj: {\n      },\n\n      // 左侧任务列操作菜单相关\n      taskMenu: {\n        visible: false,\n        btnList: [], // 操作按钮\n        selectRow: {}, // 选中行\n        style: {\n          left: '0px',\n          top: '0px'\n        }\n      },\n      // tag右键操作菜单\n      tagMenu: {\n        visible: false,\n        btnList: [], // 操作按钮\n        selectTag: {}, // 选中行\n        style: {\n          left: '0px',\n          top: '0px'\n        }\n      },\n      autoCloseTagMenu: true, // 是否自动关闭tag右键菜单 - 因为事件冲突，默认tag失去焦点时关闭tag菜单。两种情况除外 1.点击其tag menu 2.打开其他tag menu\n\n      // tag时间选择\n      tagTimeDialog: {\n        visible: false,\n        timeRange: [],\n        tag: {} // 需要修改的tag\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n    }\n  },\n  watch: {\n    // 行列数据和甘特图有强关联，数据改变需要重新渲染\n    rows: {\n      handler() {\n        console.log('ganTT rows change...')\n        this.init()\n      },\n      deep: true\n    },\n    startDate: {\n      handler() {\n        this.init()\n      }\n    },\n    dateDuration: {\n      handler() {\n        this.init()\n      }\n    },\n    decreaseDayNum: {\n      handler() {\n        this.init()\n      }\n    },\n    IncreaseDayNum: {\n      handler() {\n        this.init()\n      }\n    },\n\n    // #region 标记线逻辑\n    // 标记线\n    showMarkLine: {\n      handler() {\n        this.showAxisTime(this.markLineTime)\n      }\n    },\n    // 标记时间\n    markLineTime: {\n      handler() {\n        this.showAxisTime(this.markLineTime)\n      }\n    }\n    //#endregion 标记线逻辑\n  },\n  computed: {\n    // 标题宽\n    paintLeftVal() {\n      return +utils.delValUnit(this.paintLeft)\n    },\n    // 标题高\n    paintTopVal() {\n      return +utils.delValUnit(this.paintTop)\n    },\n\n  },\n  methods: {\n\n    /**\n     * 在画布盒子中的宽 - 像素px 转为 百分比\n     * @param {*} pxw 像素宽\n     * @param {*} repair 是否在后面补百分号\n     */\n    reW(pxw, repair = true) {\n      let val = (Number(pxw || 0) / utils.getDOMWH(this.$refs['paintBoxRefDom']).w * 100).toFixed(2)\n      return repair ? `${val}%` : val\n    },\n    /**\n     * 在画布盒子中的高 - 像素px 转为 百分比\n     * @param {*} pxH 像素高\n     * @param {*} repair 是否在后面补百分号\n     */\n    reH(pxH, repair = true) {\n      let val = (Number(pxH || 0) / utils.getDOMWH(this.$refs['paintBoxRefDom']).h * 100).toFixed(2)\n      return repair ? `${val}%` : val\n    },\n\n    /**\n     * 将时间(毫秒)转为最小时间粒度 - 现在甘特图是以分钟为粒度，后面需要扩展再说\n     * @param {*} time 具体时间或者时间戳差值\n     * @param {*} isTimeStap time是否是时间戳\n     */\n    dealTime(time, isTimeStap = false) {\n      let _tt = time\n      if (!isTimeStap) {\n        _tt = new Date(time).getTime()\n      }\n      return _tt / 1000 / 60\n    },\n    // 将最小时间粒度转为毫秒\n    dealTimeToMs(timeLd) {\n      return timeLd * 60 * 1000\n    },\n\n    // 整个甘特图的时间范围\n    getGanTTimeRange() {\n      if (this.colsInfo.length <= 0) return null\n      let startTime = new Date(`${this.colsInfo[0].label} 00:00:00`).getTime()\n      let endTime = new Date(`${this.colsInfo[this.colsInfo.length - 1].label} 23:59:59`).getTime()\n\n      return {\n        startTime,\n        endTime\n      }\n    },\n\n    // 获取横向 1px 对应的最小时间粒度【分钟】\n    getPxOfTimeParticle() {\n      let paintBoxDom = this.$refs['paintBoxRefDom']\n      if (this.colsInfo.length <= 0 || !paintBoxDom) return false\n      let { startTime, endTime } = this.getGanTTimeRange()\n      // 如时间跨度9天：9*24*60 = 12960 分钟，最小粒度 1px = 12960/500【假设甘特图宽500】= 25.92\n      return (((endTime - startTime) / 1000 / 60).toFixed(0) / utils.getDOMWH(paintBoxDom).w)\n    },\n\n    // 将时间差 - 毫秒时间戳 转为 在甘特图【.box-paint】中的横向距离\n    timeStampGapToInfeedDistance(timeMs) {\n      let _stime = this.dealTime(timeMs, true)\n      return Number(_stime / this.getPxOfTimeParticle()).toFixed(6)\n    },\n\n    /**\n     * 将left 转为 横向的时间维度\n     * @param {*} left 距离 paintBoxRefDom 画布左侧距离\n     * @param {*} startTime 开始时间，默认任务开始时间\n     */\n    getStartTimeByLeft(left = 0, startTime) {\n      if (this.colsInfo.length <= 0) return false\n      startTime = new Date(startTime).getTime() || new Date(`${this.colsInfo[0].label} 00:00:00`).getTime()\n      let period = this.dealTimeToMs(left * this.getPxOfTimeParticle()) // left 值转为 毫秒\n\n      return utils._date.format(startTime + period, 'YYYY/MM/DD HH:mm:ss')\n    },\n\n    /**\n     * 将在画布中的时间转为在 paintBoxRefDom 画布中的left\n     * @param {*} time 画布中的时间\n     */\n    getLeftByStartTime(time = '') {\n      if (!time) return 0\n      if (this.colsInfo.length <= 0) return false\n\n      let startGTTTime = this.dealTime(`${this.colsInfo[0].label} 00:00:00`)// 甘特图任务开始时间\n      if (time < startGTTTime) {\n        console.error('开始时间小于甘特图任务开始时间')\n        return false\n      }\n      // 转为分钟\n      let _stime = this.dealTime(time)\n      let pxOfTimeParticle = this.getPxOfTimeParticle()\n      return Number((_stime - startGTTTime) / pxOfTimeParticle).toFixed(6)\n    },\n\n    /**\n    * 将画布【paintBoxRefDom】中的left 转为在甘特图【ganttBoxRefDom】中的left\n    * @param {*} left\n    */\n    canvasLeftToGanTTLeft(left) {\n      return +left - this.getScrollLeft() + this.paintLeftVal\n    },\n    /**\n     * 甘特图【ganttBoxRefDom】中的left 转为 画布【paintBoxRefDom】中的left\n     * @param {*} left \n     */\n    ganTTLeftToCanvasLeft(left) {\n      return +left - this.paintLeftVal + this.getScrollLeft()\n    },\n\n    // #region 计算落点位置\n\n    /**\n     * 在box-paint 盒子中的像素坐标转数据坐标\n     * @param {*} x paintBoxRefDom 中该点的像素坐标x\n     * @param {*} y paintBoxRefDom 中该点的像素坐标y\n     * @returns\n     */\n    pixelToDataCoordinate(x, y) {\n\n      let currentRowIndex = this.getRowIndexByTop(y)\n      return {\n        x,\n        y,\n        // 横纵坐标\n        coords: [\n          this.getStartTimeByLeft(x),\n          currentRowIndex > -1 ? this.rowsInfo[currentRowIndex].label : null,\n        ]\n      }\n    },\n\n    /**\n     * 生成禁用行对应的纵坐标数组\n     * @return {min:number,max:number}[]\n     */\n    getDisabledYS() {\n      let y = 0;\n      let disabedYArr = [] // 禁止进入的纵向范围数组\n      this.rowsInfo.map(subItem => {\n        if (subItem.disabled) {\n          disabedYArr.push({\n            min: y, // 起点y\n            max: y + subItem.h // 终点y\n          })\n        }\n        y += subItem.h\n      })\n      return disabedYArr\n    },\n\n    // 获取指定行索引前的第一个非禁用行索引\n    getPreNoDisabledRowIndex(rowIndex = 0) {\n      let rowsInfo = this.rowsInfo\n      let i = rowIndex - 1\n      if (i < 0) return -1 // 没有上一行\n      for (; i >= 0; i--) {\n        let item = rowsInfo[i]\n        if (!item.disabled) {\n          break\n        }\n      }\n      if (i < 0) return -1 // 没有上一行\n      return i\n    },\n\n    // 获取指定行索引后的第一个非禁用行索引\n    getNextNoDisabledRowIndex(rowIndex = 0) {\n      let rowsInfo = this.rowsInfo\n      let i = rowIndex + 1\n      if (i >= this.rowsInfo.length) return -1 // 没有下一行\n      for (; i < rowsInfo.length; i++) {\n        let item = rowsInfo[i]\n        if (!item.disabled) {\n          break\n        }\n      }\n      if (i >= this.rowsInfo.length) return -1 // 没有下一行\n      return i\n    },\n\n    // 判断指定的纵向 画布内y（像素）是否在禁用行中\n    judgeYisInDisabledRow(y) {\n      let disabedYArr = this.getDisabledYS() // 禁用行\n      for (let i = 0; i < disabedYArr.length; i++) {\n        let { min, max } = disabedYArr[i]\n        if (y >= min && y <= max) {\n          return true\n        }\n      }\n      return false\n    },\n\n    // 根据tag距离画布顶部的top值匹配其所在行索引-注意是往下的，比如刚好等于第一行高，那么rowindex应该是2\n    getRowIndexByTop(top = 0) {\n      let y = 0\n      let rowsInfo = this.rowsInfo\n      let findRowIndex = 0\n      for (let i = 0; i < rowsInfo.length; i++) {\n        let item = rowsInfo[i]\n        y += item.h\n        if (top < y) {\n          findRowIndex = i\n          break\n        }\n      }\n      return findRowIndex\n    },\n    //根据rowsInfo中的行索引，返回其top值\n    getTopByRowIndex(rowIndex = 0) {\n      let y = 0\n      let rowsInfo = this.rowsInfo\n      for (let i = 0; i < rowsInfo.length; i++) {\n        let item = rowsInfo[i]\n        if (rowIndex === i) {\n          break\n        }\n        y += item.h\n      }\n      return y\n    },\n\n    // #endregion 计算落点位置\n\n    //#region tag 相关\n\n    /**\n     * 获取当前tag是否可以拖动\n     * 拖动优先级为：\n     * @param {*} tag \n     */\n    tagItemDragable(tag = {}) {\n      if (!tag || !Object.keys(tag).length) return false\n      if (this.readOnly) return false // 只读模式不可拖动\n\n      if (utils.isNull(tag.dragable)) { // 没有设置，取legend的配置\n        let lengendItem = this.getLegendConfig(tag)\n        return !!lengendItem.dragable\n      } else { // 取tag的配置\n        return tag.dragable\n      }\n    },\n\n    /**\n     * 获取当前tag是否应该关闭tip提示\n     * tip 显示的优先级为：当前tag 设置的closeTip > 当前tag对应legend设置的closeTip > 最后都没设置的默认显示tip\n     * @param {*} tag \n     */\n    tagItemCloseTip(tag = {}) {\n      if (!tag || !Object.keys(tag).length) return\n      let lengendItem = this.getLegendConfig(tag)\n      let type_closeTip = utils.isNull(lengendItem.closeTip) // 当前legend类型是否设置了关闭tip\n      if (utils.isNull(tag.closeTip)) { // 没有给tag单独设置\n        if (type_closeTip) { // 也没有给大类设置关闭\n          return false // 则不关闭tip\n        } else { // 大类设置了则以大类的配置为准\n          return lengendItem.closeTip\n        }\n      }\n\n      // 单独设置了以自己的为准\n      return tag.closeTip\n    },\n\n    // 判断tag是否有操作菜单\n    tagHasOperateMenu(tag) {\n      let lengendItem = this.getLegendConfig(tag)\n      return lengendItem.btnList && lengendItem.btnList.length > 0\n    },\n\n    // 获取tag 对应 legend的配置\n    getLegendConfig(_tagItem) {\n      return this.legend.find(item => item.type == _tagItem.type) || {}\n    },\n\n    // 获取 row 中的所有tag集合,返回对象格式如： {type:[tag1, tag2,...],type2:[tag1, tag2,...]}\n    getTagsMapByRowItem(rowItem = {}) {\n      if (!rowItem || !Object.keys(rowItem).length) return {}\n      let tagTypeObj = {}\n      let tags = rowItem.tags || []\n      tags.map(subItem => {\n        tagTypeObj[subItem.type] || (tagTypeObj[subItem.type] = [])\n        tagTypeObj[subItem.type].push(subItem)\n      })\n\n      return tagTypeObj\n    },\n\n    // 根据起止时间计算 在甘特图中 tag的宽和left值,注意：参数起止时间必须是完整时间 如：2023/10/04 02:10:00\n    calcTagLeftAndWidth(startTime, endTime) {\n      if (!startTime || !endTime) return null\n      if (this.colsInfo.length <= 0) return false\n\n      let startGTTTime = this.dealTime(`${this.colsInfo[0].label} 00:00:00`)// 甘特图任务开始时间\n      if (startTime < startGTTTime) {\n        console.error('开始时间小于甘特图任务开始时间')\n        return false\n      }\n      // 转为分钟\n\n      let _stime = this.dealTime(startTime)\n      let _etime = this.dealTime(endTime)\n      let sp = _etime - _stime\n      if (sp < 0) {\n        console.error('开始时间要小于结束时间')\n        return null\n      }\n      let pxOfTimeParticle = this.getPxOfTimeParticle()\n      // 甘特图起止时间\n      return {\n        left: Number((_stime - startGTTTime) / pxOfTimeParticle).toFixed(6) + 'px',\n        width: Number(sp / pxOfTimeParticle).toFixed(6) + 'px'\n      }\n    },\n\n    /**\n     * 根据所属行的label，与tag的类型来计算tag的 top、高度\n     * @param {*} parentKey tag所在行label\n     * @param {*} tagType tag对应的legend 类型\n     */\n    calcTagTopAndHeight(parentKey, tagType) {\n\n      // let rowsInfo = this.rowsInfo\n      // let findRow = null\n      // 1.计算tag对应行距离画布顶部的距离 rowTop\n      // let rowTop = 0\n      // for (let i = 0; i < rowsInfo.length; i++) {\n      //   let item = rowsInfo[i]\n      //   if (item.label === parentKey) {\n      //     findRow = item\n      //     break\n      //   } else {\n      //     rowTop += item.h\n      //   }\n      // }\n      // if (!findRow) return null\n\n      // // 2.计算行内tag距离当前行顶部的距离 rowInTop ，【当前行有几种类型的tag，当前tag又是在第几行，按legend顺序向下累加，获取tag在行内的top】\n      // let h = tagHeight // tag 高度固定\n      // let rowInTop = 0\n      // let tagTypeObj = this.getTagsMapByRowItem(findRow) // 当前行所有tag\n      // // let tagTypeNum = Object.keys(tagTypeObj).length\n\n      // let legendData = this.legend\n      // let tagMarginBottom = tagMarginTop\n      // for (let i = 0; i < legendData.length; i++) {\n      //   let item = legendData[i]\n      //   let isThis = item.type === tagType // tag是不是这个类型\n      //   if (tagTypeObj[item.type] && !isThis) { // 行里面有这个类型，且当前tag在后面\n      //     rowInTop += tagMarginBottom + h\n      //   }\n      //   if (isThis) {\n      //     break\n      //   }\n      // }\n      // rowInTop += rowPaddingTop\n\n      // // 3.加起来就是tag距离画布顶端的距离\n      // let top = rowTop + rowInTop\n\n      return {\n        top: this.calcTagOffsetCanvasTop(parentKey, tagType) + 'px',\n        // top: top + 'px',\n        height: tagHeight + 'px' // tag 高度固定\n      }\n    },\n\n    /**\n     * 新增tag节点\n     * @param {*} tagItem tag节点\n     * @param {*} rowParent 所在行\n     * @return boolean 操作成功 | 失败\n     */\n    addTag(tagItem = {}, rowParent = {}) {\n      if (!tagItem || !Object.keys(tagItem).length) return false\n      if (!rowParent || !Object.keys(rowParent).length) return false\n\n      let newTagItem = this.factoryTag(tagItem, rowParent)\n      this.tagList.push(newTagItem)\n\n      // tag 变化后需要调用的更新函数\n      this.tagChangThenRefreshAll()\n      return true\n    },\n    /**\n     * 修改tag节点\n     * @param {*} tagId 生成的甘特图tag唯一id\n     * @param {*} newTagItem 修改后的tag\n     * @param {*} refreshGTT 修改tag后是否需要刷新甘特图，不涉及宽高计算变化的可以不调用刷新，提高性能\n     * @return boolean 操作成功 | 失败\n     */\n    updateTag(tagId, newTagItem, refreshGTT = true) {\n      if (!tagId) return false\n      this.tagList = this.tagList.map(item => {\n        if (item.tagId === tagId) {\n          return {\n            ...newTagItem,\n            // 重新计算时间差\n            timeStampDiffer: new Date(newTagItem.endTime).getTime() - new Date(newTagItem.startTime).getTime(), // 开始时间与结束时间的时间差 - tag 拖动时需要保证时间差不变\n          }\n        }\n        return item\n      })\n\n      this.backfillTagListToRowsInfo() // tag变化了，刷新rowsInfo\n\n      // tag 变化后需要调用的更新函数\n      refreshGTT && this.refreshGTTWH() // 刷新甘特图宽高\n      return true\n    },\n    /**\n     * 删除tag节点\n     * @param {*} tagId 生成的甘特图tag唯一id\n     * @return boolean 操作成功 | 失败\n     */\n    deleteTag(tagId) {\n      if (!tagId) return false\n      this.tagList = this.tagList.filter(item => item.tagId !== tagId)\n\n      // tag 变化后需要调用的更新函数\n      this.tagChangThenRefreshAll()\n      return true\n    },\n    /**\n     * tag 移动前\n     *  */\n    tagDragStart(param = {}) {\n      this.$emit('tagDragStart', param)\n    },\n    /**\n     * tag 位置移动结束\n     * 甘特图的移动结束只是为了确定当前left，top所在行（label），列（开始、结束时间）信息，更新后走渲染逻辑即可\n     */\n    tagChangeEnd() {\n      let { tagItemOld, tagItem, tagItemDom, left, top } = this.draging // 将 draging 横向信息转成时间信息存入对应时间tag\n\n      let finalTop = top\n\n      let rows = this.rowsInfo.map(item => {\n        return {\n          label: item.label,\n          h: item.h\n        }\n      })\n\n      // 1.进入禁用行矫正位置 - 目前只支持y方向 【不允许拖拽到禁用行】\n      if (this.disabledRowSilent) {\n        let disabledRows = this.rowsInfo.filter(item => item.disabled)\n        if (disabledRows.length === this.rowsInfo.length) return // 全部是禁用行\n        if (tagItem && tagItem.style) {\n          let disabedYArr = this.getDisabledYS() // 禁用行纵向边界数组\n          let num = 0\n          let correctTop = finalTop\n          let paintHeight = utils.getDOMWH(this.$refs['paintBoxRefDom']).h\n          let _tagHeight = utils.getDOMWH(tagItemDom).h\n\n          while (num !== disabedYArr.length) { // 直到矫正到非禁用行\n            num = 0\n            for (let i = 0; i < disabedYArr.length; i++) {\n              num++;\n              let { max, min } = disabedYArr[i]\n              if (tagIsTouchDisabledRow({\n                disabledYMin: min, // 禁用行Y最小值\n                disabledYMax: max, // 禁用行Y最大值\n                tagHeight: _tagHeight, // tag 的高度\n                tagTop: correctTop, // tag 的css top值\n              })) { // 进入禁用行\n                num = 0\n                let correctRowIndex = 0\n                let _currentRowIndex = this.getRowIndexByTop(correctTop)\n                // console.log(_currentRowIndex, 333)\n                // 以tag左上角为基准准\n                if (correctTop > min || correctTop === 0) { // 左上角大于最小值，说明整个进入了禁用行，矫正到下一行\n                  // 获取下一个非禁用行\n                  correctRowIndex = this.getNextNoDisabledRowIndex(_currentRowIndex)\n                  if (correctRowIndex < 0) {// 后面没有，往前找\n                    correctRowIndex = this.getPreNoDisabledRowIndex(_currentRowIndex)\n                  }\n                } else { // 矫正到上一行\n                  correctRowIndex = this.getPreNoDisabledRowIndex(_currentRowIndex + 1) // +1 是因为当前左上角在上一行,tag接触到了禁用区域，真实禁用区域是下一行的\n                  if (correctRowIndex < 0) {// 前面没有，往后找\n                    correctRowIndex = this.getNextNoDisabledRowIndex(_currentRowIndex + 1)\n                  }\n                }\n                correctTop = this.getTopByRowIndex(correctRowIndex)\n                break // 重新循环\n              }\n            }\n          }\n          // tagItem.style.top = correctTop + 'px'\n          finalTop = correctTop\n        }\n      }\n\n      // 2.矫正top在行内的正确位置，相同类型的tag在一行\n      let currentRowIndex = this.getRowIndexByTop(finalTop)\n      let newRowLabel = rows[currentRowIndex].label\n      {\n        // 更新tag所属行\n        this.tagList.some(sub => {\n          if (sub.tagId === tagItem.tagId) {\n            // 拖拽结束后更新tag所属行、列的开始时间 【最终目的】\n            sub.parentKey = newRowLabel\n            sub.startTime = this.getStartTimeByLeft(left)\n            // sub.endTime = this.getStartTimeByLeft(left + utils.getDOMWH(tagItemDom).w) // 根据宽度计算结束时间，这样有误差---pass\n            sub.endTime = utils._date.format(new Date(sub.startTime).getTime() + sub.timeStampDiffer, 'YYYY/MM/DD HH:mm:ss')\n            return true\n          }\n        })\n\n        // tag 变化后需要调用的更新函数\n        this.tagChangThenRefreshAll()\n      }\n\n      this.$emit('tagDragEnd', {\n        ...this.draging\n      })\n\n      if (this.dragTagEndShowTimeDialog && this.draging.tagItemDom) { // 打开tag时间选择框\n        this.openTagTimeDialog(this.draging.tagItem)\n      }\n\n      // 清空拖拽信息\n      this.draging.tagItemOld = {}\n      this.draging.tagItem = {}\n      this.draging.tagItemDom = null\n\n      this.historyDraging = {\n        left: null,\n        top: null\n      }\n\n      // 清除参考线\n      this.clearGuideLine()\n\n    },\n\n    //#region tag 拖动避让效果\n\n    /**\n     * tag避让\n     * @param {*} preTagItem 前一个tag\n     * @param {*} nextTags 前一个tag后面的所有tag -- 即可能需要加上避让效果的tags\n     */\n    dodgeTag(preTagItem = {}, nextTags = []) {\n      if (!preTagItem || !Object.keys(preTagItem).length || !nextTags || !nextTags.length) return\n      // 前一个tag\n      let _dodge = preTagItem._dodge\n      let before_startTime = _dodge ? _dodge.startTime : new Date(preTagItem.startTime).getTime() // 因为此函数会递归调用，需要判断此tag是否是已经避让过的tag\n      let before_endTime = _dodge ? _dodge.endTime : new Date(preTagItem.endTime).getTime()\n\n      // 紧跟着的后面一个tag\n      let afterTagItem = nextTags[0]\n      let after_startTime = new Date(afterTagItem.startTime).getTime()\n      let after_endTime = new Date(afterTagItem.endTime).getTime()\n      let timeStampGap = before_endTime - after_startTime // 需要避让多长时间\n\n      if (timeStampGap > 0) { // 覆盖，后面的需要向后避让\n        afterTagItem.style.transform = `translateX(${(this.timeStampGapToInfeedDistance(timeStampGap))}px)`\n        // 临时用于避让的前端辅助变量,拖动完成后清除 - 因为动画使用translateX实现，将变换后的时间存入，让后面的tag根据此信息判断是否需要向后避让\n        afterTagItem._dodge = {\n          startTime: after_startTime + timeStampGap,\n          endTime: after_endTime + timeStampGap\n        }\n        // 存储避让信息\n        this.dodgeTagsInfo[afterTagItem.tagId] = afterTagItem.style.transform\n      }\n\n      let _nextTags = nextTags.slice(1)\n      if (!_nextTags.length) return\n      this.dodgeTag(afterTagItem, _nextTags) // 递归操作后面的tag\n    },\n\n    /**\n     * 去掉指定_tagItem的避让效果\n     * @param {*} _tagItem \n     */\n    clearTagDodge(_tagItem) {\n      _tagItem.style.transform = `translateX(0)`\n      delete _tagItem._dodge // 临时用于避让的前端辅助变量\n    },\n\n    // 拖动tag时当前行后面的tag有避让效果\n    tagMoveDodgeAnimate(dragTagItem = {}) {\n      if (!this.openTagMoveDodgeAnimate) return // 未开启此功能，返回\n      if (!dragTagItem || !Object.keys(dragTagItem).length) return\n\n      // 获取拖动tag的信息\n      let left = utils.delValUnit(dragTagItem.style.left)\n      let top = utils.delValUnit(dragTagItem.style.top)\n      let startTime = this.getStartTimeByLeft(left)\n      let endTime = utils._date.format(new Date(startTime).getTime() + dragTagItem.timeStampDiffer, 'YYYY/MM/DD HH:mm:ss')\n\n      // 1.找到tag在哪一行 - 拖动过程中parentKey变化，只能通过top值重新查找\n      let currentRowIndex = this.getRowIndexByTop(top)\n      let newRowLabel = this.rowsInfo[currentRowIndex].label\n\n      // 过滤tags\n      let filterTypeTags = this.tagList.filter(item => item.tagId !== dragTagItem.tagId && item.type === dragTagItem.type && item.dragable !== false) // 过滤掉当前tag、过滤当前类型的所有tags、且不是禁止拖动的tag\n      let thisRowTags = filterTypeTags.filter(item => item.parentKey === newRowLabel) // 当前行所有tag\n\n      // 2.当前行中 将tag前的tags还原到正确位置\n      // let beforeTags = thisRowTags.filter(item=>new Date(item.startTime).getTime() <= new Date(startTime).getTime()) // tag前面的tags\n      // beforeTags.map(item=>this.clearTagDodge(item))\n\n      // 清除之前的副作用\n      this.dodgeTagsInfo = {}\n      this.tagList.map(item => this.clearTagDodge(item))\n\n      // 3.查找当前tag后面的tags\n      let afterTags = thisRowTags.filter(item => new Date(item.startTime).getTime() > new Date(startTime).getTime()) // tag后面的tags\n      afterTags.sort((a, b) => new Date(a.startTime).getTime() - new Date(b.startTime).getTime()) // 排序\n      this.dodgeTag({\n        ...dragTagItem,\n        startTime,\n        endTime,\n      }, afterTags)\n\n      // 4.清除其他行tag避让后的副作用\n      // let otherRowTags = filterTypeTags.filter(item=>item.parentKey !== newRowLabel)\n      // otherRowTags.map(item=>this.clearTagDodge(item))\n    },\n\n    //#endregion tag 拖动避让效果\n\n    // tag 拖动事件\n    tagMove(mouseEvent, { tagItemDom, tagItemOld, tagItem, left, top, toBox_X, toBox_Y }) {\n\n      // 存储上次的拖拽信息，用于判断当前拖动的方向\n      if (this.historyDraging.left === null) {\n        this.historyDraging.left = left\n      }\n      if (this.historyDraging.top === null) {\n        this.historyDraging.top = top\n      }\n\n      // console.log(tagItemDom, tagItem, left, top, 'tagMove')\n      this.clearGuideLine() // 清除参考线\n      this.closeAllMenu('tagMove')\n      if (!tagItemDom) return\n      let tagItemDomWidth = utils.getDOMWH(tagItemDom).w\n      let tagItemDomHeight = utils.getDOMWH(tagItemDom).h\n\n      // 1.不可拖动到禁用行\n      if (this.disabledRowSilent) {\n\n        let disabedYArr = this.getDisabledYS() // 禁用行\n        if (disabedYArr.length === this.rowsInfo.length) return // 全部是禁用行\n        let inDisabledRow = false\n        disabedYArr.map(({ max, min }) => {\n          if (tagIsTouchDisabledRow({\n            disabledYMin: min, // 禁用行Y最小值\n            disabledYMax: max, // 禁用行Y最大值\n            tagHeight: tagItemDomHeight, // tag 的高度\n            tagTop: top, // tag 的css top值\n          })) { // 进入禁用行\n            inDisabledRow = true\n          }\n        })\n\n        if (inDisabledRow) { // 进入禁用行\n          tagItemDom.style.cursor = \"not-allowed\";\n        } else {\n          tagItemDom.style.cursor = \"move\";\n        }\n\n      }\n\n      // 边界条件处理 start ----\n\n      // 1.拖动范围限制在画布区域\n      let dealObj = moveInBoundary({\n        contentDom: this.$refs['paintBoxRefDom'], // 边界盒子dom\n        dragDom: tagItemDom, // 拖拽的盒子dom\n        left,\n        top\n      })\n      left = dealObj.left\n      top = dealObj.top\n\n      // 拖动tag时，若有滚动条，跟着滚动\n      {\n\n        // 获取拖动方向\n        let _dx = left - this.historyDraging.left // 大于0 tag向右拖动，小于0 tag向左拖动\n        let _dy = top - this.historyDraging.top // 大于0 tag向下拖动，小于0 tag向上拖动\n\n        // 横向滚动\n        let _scrollLeft = this.getScrollLeft()\n        let colWidth = this.getTimeColW()\n        let showWidth = utils.getDOMWH(this.$refs['boxRightRefDom']).w // 甘特图中画布区显示的宽度\n        if (_dx < 0 && left < _scrollLeft) { // 拖动到左侧滚动区域\n          // this.scrollGanTTXTo(Math.floor(left / colWidth) * colWidth)\n          this.scrollGanTTXTo(left)\n        } else if (_dx > 0 && left + tagItemDomWidth > showWidth + _scrollLeft) { // 拖动到右侧滚动区域\n          this.scrollGanTTXTo(_scrollLeft + (left + tagItemDomWidth - showWidth - _scrollLeft))\n        }\n\n        // 纵向滚动\n        let _scrollTop = this.getScrollTop()\n        let showHeight = utils.getDOMWH(this.$refs['boxRightRefDom']).h // 甘特图中画布区显示的宽度\n        if (_dy < 0 && top < _scrollTop) {\n          this.scrollGanTTYTo(top)\n        } else if (_dy > 0 && top + tagItemDomHeight > showHeight + _scrollTop) {\n          this.scrollGanTTYTo(_scrollTop + (top + tagItemDomHeight - showHeight - _scrollTop))\n        }\n      }\n\n      tagItem.style.left = left + 'px'\n      tagItem.style.top = top + 'px'\n      // 边界条件处理 end ----\n\n      // 拖动避让动画\n      this.tagMoveDodgeAnimate(tagItem)\n\n      // 记录拖拽信息\n      this.draging = {\n        tagItemOld: tagItemOld, // 拖拽前tag Data\n        tagItem: tagItem, // 拖拽的tag Data\n        tagItemDom: tagItemDom, // 拖拽的tag Dom\n        left: left,\n        top: top\n      }\n      this.historyDraging = {\n        left: left,\n        top: top\n      }\n\n      // 绘制参考线\n      this.drawMoveGuideLineY(left, top)\n    },\n\n    // 构造原始甘特图中的tag格式，最终提供给外部使用 - 注意：tagId 是甘特图内增删改的唯一标志，每次init()后,tagid将更新\n    backfillTag(tagItem = {}) {\n      let obj = {\n        ...(tagItem.data || {}),\n        // tag数据，这部分属性以当前tag为准\n        tagId: tagItem.tagId, // 生成唯一id\n        startTime: tagItem.startTime || '', // tag 对应开始时间\n        endTime: tagItem.endTime || '', // tag 对应结束时间\n        label: tagItem.label || '甘特图 tag', // tag上显示的文本\n        type: tagItem.type || '', // 所属legend\n        closeTip: tagItem.closeTip, // 关闭tip\n        dragable: tagItem.dragable, // 是否可以拖动，注意：只有true|false才取这个，代表是配置了的,undefined 等代表未配置，默认是可以拖动的\n        className: tagItem.className, // 自定义tag 样式名\n        selected: tagItem.selected, // 当前tag是否选中-有选中样式\n        preIcon: tagItem.preIcon, // tag前的图标\n        hide: tagItem.hide, // 是否隐藏此tag\n      }\n\n      return obj\n    },\n    /**\n     * tag 构造\n     * @param {*} tagItem tag节点\n     * @param {*} rowParent 所在行\n     * @return {} tag 对象\n     */\n    factoryTag(tagItem = {}, rowParent = {}) {\n      let tagGTTconfig = this.backfillTag(tagItem)\n      let _item = {\n        data: tagItem, // 存储原始数据\n        // 其他属性用于辅助交互\n        parentKey: rowParent.label || '', // 记录所属父节点 - 行\n        ...tagGTTconfig,\n        tagId: tagGTTconfig.tagId || `tag-${new Date().getTime()}-${uuid()}`, // 生成唯一id\n        timeStampDiffer: new Date(tagItem.endTime).getTime() - new Date(tagItem.startTime).getTime(), // 开始时间与结束时间的时间差 - tag 拖动时需要保证时间差不变\n        style: { // css\n          top: 0,\n          width: 'auto',\n          left: 0,\n          height: tagHeight + 'px', // 默认高度\n          transform: 'translateX(0)', // 用于实现拖拽避让动画\n        }\n      }\n\n      // 保留拖拽end后的闪避效果\n      if (this.dodgeTagsInfo[_item.tagId]) {\n        _item.style.transform = this.dodgeTagsInfo[_item.tagId]\n      }\n\n      // style横向信息赋值\n      let style_horizontal = this.calcTagLeftAndWidth(_item.startTime, _item.endTime)\n      if (style_horizontal) {\n        _item.style.left = style_horizontal.left\n        _item.style.width = style_horizontal.width\n      }\n\n      // style纵向信息赋值\n      let style_vertical = this.calcTagTopAndHeight(_item.parentKey, _item.type)\n      if (style_vertical) {\n        _item.style.top = style_vertical.top\n        _item.style.height = style_vertical.height\n      }\n\n      return _item\n    },\n    // 生成tag一维数据\n    createTagList() {\n      let tagList = []\n      this.rowsInfo.map(row => {\n        let arr = (row.tags || []).map(tagItem => this.factoryTag(tagItem, row))\n        tagList = tagList.concat(arr)\n      })\n\n      this.tagList = tagList\n\n      this.verticalTag() // 垂直居中tag\n    },\n\n    // 垂直居中tag 【原理：修改每个tag的top值实现】 - 前提是 this.rowsInfo 计算完成！\n    verticalTag() {\n\n      // 1.获取每行内的tag的最大 top\n      let obj = {}\n      this.tagList.map(item => {\n        let top = +utils.delValUnit(item.style.top)\n        obj[item.parentKey] || (obj[item.parentKey] = top)\n        if (top > obj[item.parentKey]) {\n          obj[item.parentKey] = top\n        }\n      })\n\n      // 2.计算行内tag下的剩余高度\n      let y = 0\n      let rowPaddingBottom = rowPaddingTop\n      this.rowsInfo.map(row => {\n        let rowKey = row.label\n        let rowHeight = +row.h\n        if (!utils.isNull(obj[rowKey])) {\n          obj[rowKey] = y + rowHeight - Number(obj[rowKey]) - tagHeight - rowPaddingBottom\n          // if (rowHeight <= hasTagsDataMinRowHeight) {\n          //   obj[rowKey] = y + rowHeight - Number(obj[rowKey]) - tagHeight - rowPaddingBottom\n          // } else { // 高度被撑开的不用处理\n          //   obj[rowKey] = ''\n          // }\n        }\n        y += row.h\n      })\n\n      // 3.给tag赋值\n      this.tagList.map(item => {\n        if (!utils.isNull(obj[item.parentKey])) {\n          item.style.top = +utils.delValUnit(item.style.top) + Number((obj[item.parentKey] / 2 || 0).toFixed(4)) + 'px'\n        }\n      })\n\n    },\n\n    // 将taglist回填到rowsInfo中，新增、删除、修改tag“完成后“需要调用此方法，以保证rowsInfo 与 tagList数据同步\n    // 注意：只修改数据，但不会影响宽高改变的，不需要再调用刷新方法\n    backfillTagListToRowsInfo() {\n      this.rowsInfo = this.rowsInfo.map(row => {\n        return {\n          ...row,\n          tags: this.tagList.filter(tagItem => tagItem.parentKey === row.label).map(tagItem => {\n            return this.backfillTag(tagItem)\n          })\n        }\n      })\n    },\n\n    //#endregion tag 相关\n\n    //#region tag 时间选择,更改tag的开始结束时间\n\n    //【因为粒度没办法精确到1px - 1分钟程度，只能用户手动矫正，\n    //特别注意：tag渲染是将时间维度转为像素的，时间是肯定不会不在渲染过程被修改，只要不去拖动，那就一定是设定的时间】\n\n    closeTagTimeDialog() {\n      this.tagTimeDialog.visible = false\n      this.$emit('closeTagTimeDialog')\n    },\n    // 确定\n    confirmTagTimeDlaiog() {\n      let tag = this.tagTimeDialog.tag\n      let range = this.tagTimeDialog.timeRange\n      if (!range || !range.length || !range[0] || !range[1]) return Message({\n        message: '请选择时间',\n        type: 'warning'\n      });\n      let startT = range[0]\n      let endT = range[1]\n      if (new Date(startT).getTime() > new Date(endT).getTime()) return Message({\n        message: '开始时间应小于结束时间',\n        type: 'warning'\n      });\n      this.updateTag(tag.tagId, {\n        ...tag,\n        startTime: startT,\n        endTime: endT\n      })\n      this.closeTagTimeDialog()\n    },\n    openTagTimeDialog(tagItem = {}) {\n      if (!tagItem || !Object.keys(tagItem).length) return\n      let { startTime, endTime } = tagItem\n      if (!startTime || !endTime) return\n      this.tagTimeDialog.tag = tagItem\n      this.tagTimeDialog.timeRange = [startTime, endTime]\n      this.tagTimeDialog.visible = true\n    },\n\n    //#endregion tag 时间选择\n\n    //#region tag 选中\n\n    // 点击\n    tagClickHandle(param) {\n      if (this.readOnly) return // 只读模式\n      let { e, tagItem } = param\n      this.$emit('tagClick', {\n        e,// 鼠标e\n        tag: tagItem\n      })\n    },\n\n    // 清空所有tag的选中状态\n    clearAllTagSelected() {\n      this.tagList.map(item => {\n        item.selected = false\n      })\n      this.backfillTagListToRowsInfo() // tag变化了，刷新rowsInfo\n    },\n\n    //#endregion tag 选中\n\n    //#region tag 右键菜单\n\n    // 失去焦点关闭菜单\n    tagblurHandle() {\n      /*\n       首先tag 的事件不能冒泡\n       但这样父级就无法触发失去焦点从而关闭此菜单\n       用tag 的失去焦点事件后又无法触发后面的tag的右键菜单按钮，因为blur事件先触发，\n       最终用个全局变量来控制。。。\n      */\n      this.autoCloseTagMenu = true\n      // 延迟，让其他不关闭菜单的事件给开关赋值\n      setTimeout(() => {\n        if (this && this.tagMenu_close && this.autoCloseTagMenu) {\n          try {\n            this.tagMenu_close()\n          } catch (e) {\n            console.log('tagblurHandle error：', e)\n          }\n        }\n      }, 400)\n    },\n\n    // tag 右键菜单回调\n    tagContextmenuHandle(param) {\n      // console.log('tagcontextmenuHandle', param)\n\n      // 关闭其他菜单\n      this.closeAllMenu('tagContextmenuHandle')\n      this.autoCloseTagMenu = false // 阻止tag失去焦点自动关闭tag menu\n      let { tagItem, showOperateMark } = param\n      if (this.readOnly || !showOperateMark) return\n\n      // 获取tag样式\n      let lengendItem = this.getLegendConfig(tagItem)\n      let tagStyle = tagItem.style\n      let tagX = +utils.delValUnit(tagStyle.left)\n      let tagY = +utils.delValUnit(tagStyle.top)\n      let tagW = +utils.delValUnit(tagStyle.width)\n      let tagH = +utils.delValUnit(tagStyle.height)\n\n      // 计算理论值\n      let ofx = 5 // 加点偏移\n      let left = tagX + tagW\n      let top = tagY\n\n      this.tagMenu = {\n        ...this.tagMenu,\n        visible: true,\n        btnList: lengendItem.btnList || [], // 操作按钮\n        selectTag: {\n          ...tagItem\n        }, // 选中tag\n      }\n\n      this.$nextTick(() => {\n        let tagMenuRefDom = this.$refs['tagMenuRefDom'] // tag右键菜单\n        let paintBoxDom = this.$refs['paintBoxRefDom'] // 画布\n        // 实际值-考虑边界\n        if (!paintBoxDom || !tagMenuRefDom) return\n        let { w: boxW, h: boxH } = utils.getDOMWH(paintBoxDom)\n        let { w: tagMenuW, h: tagMenuH } = utils.getDOMWH(tagMenuRefDom)\n\n        if (left + tagMenuW + ofx > boxW) {\n          left = tagX - tagMenuW - ofx\n        } else {\n          left = left + ofx\n        }\n        if (top + tagMenuH > boxH) {\n          top = tagY - tagMenuH + tagH\n        }\n        top = Math.max(...[top, 0])\n\n        this.tagMenu = {\n          ...this.tagMenu,\n          style: {\n            left: left + 'px',\n            top: top + 'px'\n          }\n        }\n      })\n\n      // tag 鼠标右键\n      this.$emit('tagContextmenu', {\n        tag: tagItem\n      })\n    },\n    tagMenu_close() {\n      this.tagMenu = {\n        ...this.tagMenu,\n        visible: false,\n        btnList: [],\n        selectTag: {}\n      }\n    },\n    /**\n    * tag右键操作菜单事件\n    * @param {*} e 鼠标e\n    * @param {*} menuItem 菜单触发项\n    * @param {*} btnIndex 菜单触发索引\n    */\n    tagMenuBtnClickHandle(e, menuItem, btnIndex) {\n      if (this.readOnly || !menuItem || menuItem.disabled) return\n      this.$emit('tagMenuBtnClick', {\n        e,// 鼠标e\n        target: menuItem, // 菜单触发项\n        triggerIndex: btnIndex, // 菜单触发索引\n        tag: {\n          ...this.tagMenu.selectTag,\n        }\n      })\n      this.tagMenu_close()\n    },\n    //#endregion tag 右键菜单\n\n    //#region 网格线canvas\n\n    // 画线\n    drawGridLine(ctx, beginPoints = [], endPoints = []) {\n      if (!beginPoints.length === 2 || !endPoints.length === 2) return\n      ctx.beginPath();\n      // canvas画线太粗并且模糊解决方法：+0.5 而且canvas不能设置box-sizing: border-box;设置了也不行\n      ctx.moveTo(beginPoints[0] + 0.5, beginPoints[1] + 0.5);\n      ctx.lineTo(endPoints[0] + 0.5, endPoints[1] + 0.5);\n      ctx.lineWidth = 1\n      ctx.strokeStyle = this.gridLineColor\n      ctx.lineCap = \"butt\";\n\n      ctx.stroke();\n    },\n\n    // 绘制禁用行\n    drawDisabledRow(canvas) {\n      if (!canvas) return\n      let ctx = canvas.getContext('2d');\n      let x = 0\n      let y = 0\n      this.rowsInfo.map(item => {\n        if (item.disabled) {\n          ctx.fillStyle = this.disabledBgColor;\n          ctx.fillRect(x, y, canvas.width, item.h); // fillRect(x, y, width, height)：绘制一个填充的矩形。\n        }\n        y += item.h\n      })\n    },\n\n    // 绘制网格、禁用行背景色\n    drawGridCanvas() {\n      let canvas = this.$refs['canvasGridRefDom']\n      if (!canvas) return\n      let width = canvas.width\n      let height = canvas.height\n      let ctx = canvas.getContext('2d');\n      utils.clearCanvas(canvas)\n\n      // 禁用行背景\n      this.drawDisabledRow(canvas)\n\n      // 内容区域-网格\n      {\n        // 行\n        let rows = this.rowsInfo\n        let y = 0\n        // this.drawGridLine(ctx, [0, y], [width, y])\n        // y += this.paintTopVal\n        // this.drawGridLine(ctx, [0, y], [width, y])\n        rows.map((item, index) => {\n          // this.drawGridLine(ctx, [0, y], [width, y])\n          y += item.h\n          // if (index === rows.length - 1) { // 最后一行，因为+0.5后会超出。因此-1\n          //   this.drawGridLine(ctx, [0, y - 1], [width, y - 1])\n          // } else {\n          //   this.drawGridLine(ctx, [0, y], [width, y])\n          // }\n          if (index !== 0 || index !== rows.length - 1) {\n            this.drawGridLine(ctx, [0, y], [width, y])\n          }\n        })\n\n        // 列\n        let cols = this.colsInfo\n        let w = 0\n        // this.drawGridLine(ctx, [w, 0], [w, height])\n        // w += this.paintLeftVal\n        // this.drawGridLine(ctx, [w, 0], [w, height])\n        cols.map((item, index) => {\n          // this.drawGridLine(ctx, [w, 0], [w, height])\n          w += item.w\n          // if (index === cols.length - 1) { // 最后一列，因为+0.5后会超出。因此-1\n          //   this.drawGridLine(ctx, [w - 1, 0], [w - 1, height])\n          // } else {\n          //   this.drawGridLine(ctx, [w, 0], [w, height])\n          // }\n          if (index !== 0 || index !== cols.length - 1) {\n            this.drawGridLine(ctx, [w, 0], [w, height])\n          }\n        })\n      }\n\n      // 标题栏、整体-网格 - 补充没有绘制到的区域\n      {\n        let ganttCanvas = this.$refs['canvasGanttRefDom']\n        if (!ganttCanvas) return\n        let _width = ganttCanvas.width - 1.2\n        // let _height = this.paintBoxInfo.height + this.paintTopVal - 1.2 // 取这个是因为横向可能有滚动条\n        let _height = ganttCanvas.height - 1.2\n        let _ctx = ganttCanvas.getContext('2d');\n\n        let points = {\n          leftTop: [0, 0],\n          rightTop: [_width, 0],\n          rightBottom: [_width, _height], // 最后一个，因为+0.5后会超出。因此减去一点\n          leftBottom: [0, _height]\n        }\n        // console.log(points, 111)\n\n        // 边框\n        this.drawGridLine(_ctx, points.leftTop, points.rightTop) // 上\n        this.drawGridLine(_ctx, points.rightTop, points.rightBottom) // 右\n        this.drawGridLine(_ctx, points.leftBottom, points.rightBottom) // 下\n        this.drawGridLine(_ctx, points.leftTop, points.leftBottom) // 左\n\n        // 标题\n        this.drawGridLine(_ctx, [0, this.paintTopVal], [_width, this.paintTopVal])\n        this.drawGridLine(_ctx, [this.paintLeftVal, 0], [this.paintLeftVal, _height])\n\n        // 底部-展示的统计行\n        let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n        if (!ganttBoxRefDom) return\n        let tjRowNodes = ganttBoxRefDom.querySelectorAll('.stat-bottom') || []\n        let _y = ganttCanvas.height\n        let _x = ganttCanvas.width\n        // 从后面向上减就不用考虑标题行因素\n        for (let i = tjRowNodes.length - 1; i >= 0; i--) {\n          let nodeItem = tjRowNodes[i]\n          _y -= utils.getDOMWH(nodeItem).h\n          this.drawGridLine(_ctx, [0, _y], [_x, _y])\n        }\n      }\n\n    },\n\n    //#endregion 网格线canvas\n\n    //#region 参考线\n\n    /**\n     * 绘制拖动时的参考线\n     * @param {*} x .box-paint 盒子中的二维坐标\n     * @param {*} y .box-paint 盒子中的二维坐标\n     */\n    drawMoveGuideLineY(x, y) {\n      let canvas = this.$refs['canvasGuideBoxRefDom']\n      if (!canvas) return\n      let height = canvas.offsetHeight\n      let ctx = canvas.getContext('2d');\n      // clearGuideLine()\n      ctx.setLineDash([5]);\n      ctx.lineWidth = 1\n      ctx.beginPath();\n      // 纵向\n      // ctx.moveTo(x, 0);\n      // ctx.lineTo(x, height);\n      // ctx.strokeStyle = '#000000'\n      // ctx.stroke();\n\n      // 横向\n      let ht = y\n      ctx.moveTo(0, ht);\n      ctx.lineTo(x, ht);\n      ctx.strokeStyle = 'rgba(0,0,0,0.2)'\n      ctx.stroke();\n\n      // 拖动时显示的时间线，标记tag左侧时间方便用户体验\n      if (x >= this.getScrollLeft()) {\n        this.movingTimeLine = {\n          ...this.movingTimeLine,\n          visible: true,\n          left: this.canvasLeftToGanTTLeft(x) + 'px',\n          title: utils._date.format(this.getStartTimeByLeft(x), 'HH:mm')\n        }\n      } else {\n        this.movingTimeLine.visible = false\n      }\n\n    },\n    // 清除参考线\n    clearGuideLine() {\n      utils.clearCanvas(this.$refs['canvasGuideBoxRefDom'])\n\n      // 清除时间线\n      this.movingTimeLine.visible = false\n    },\n\n    //#endregion 参考线\n\n    //#region 宽高计算\n\n    /**\n     * 计算指定tag类型在行内的top，注意是距离当前行顶部的距离\n     * @param {*} parentKey 行标志-label\n     * @param {*} tagType 行内的哪个类型的tag，也就是legend的类型\n     */\n    calcTagInRowTop(parentKey, tagType) {\n      if (!parentKey || utils.isNull(tagType)) return 0\n\n      let rowsInfo = this.rowsInfo\n      let findRow = rowsInfo.find(row => row.label === parentKey)\n      let tagTypeObj = this.getTagsMapByRowItem(findRow) // 当前行所有tag\n\n      let th = tagHeight // tag 高度固定\n      let legendData = this.legend\n      let tagMarginBottom = tagMarginTop\n      let rowInTop = 0\n      for (let i = 0; i < legendData.length; i++) {\n        let item = legendData[i]\n        let isThis = item.type === tagType // tag是不是这个类型\n        if (tagTypeObj[item.type] && !isThis) { // 行里面有这个类型，且当前tag在后面\n          rowInTop += tagMarginBottom + th\n        }\n        if (isThis) {\n          break\n        }\n      }\n      rowInTop += rowPaddingTop // 加上上边距\n      return rowInTop\n    },\n\n    /**\n     * 计算指定tag类型距离画布顶部的距离\n     * @param {*} parentKey 行标志-label\n     * @param {*} tagType 行内的哪个类型的tag，也就是legend的类型\n     */\n    calcTagOffsetCanvasTop(parentKey, tagType) {\n      if (!parentKey || utils.isNull(tagType)) return 0\n      let rowTop = this.calcRowTopByRowLabel(parentKey)\n\n      // 计算tag 距离所在行顶部距离 - 注意这里是当前行内\n      let rowInTop = this.calcTagInRowTop(parentKey, tagType)\n      return rowTop + rowInTop\n    },\n\n    /**\n     * 通用方法-无副作用\n     * 计算 “第几行” 距离 paintBoxRefDom 画布顶部距离 【注意：不包含当前行高度，是当前行顶部距离画布顶部的距离】\n     * @param {*} rowIndex 第几行的索引，注意是0开始的\n     */\n    calcRowTopByRowIndex(rowIndex = 0) {\n      let rowsInfo = this.rowsInfo\n      let y = 0\n      for (let i = 0; i < rowsInfo.length; i++) {\n        let item = rowsInfo[i]\n        if (i === rowIndex) {\n          break\n        } else {\n          y += item.h\n        }\n      }\n\n      return y\n    },\n\n    /**\n     * 根据行label获取当前行距离画布【paintBoxRefDom】顶部的距离\n     * @param {*} parentKey \n     */\n    calcRowTopByRowLabel(parentKey = '') {\n      if (!parentKey) return 0\n      let rowsInfo = this.rowsInfo\n      let findRowIndex = rowsInfo.findIndex(row => row.label === parentKey)\n      if (findRowIndex < 0) return 0\n      let rowTop = this.calcRowTopByRowIndex(findRowIndex)\n      return rowTop\n    },\n\n    /**\n     * 通用方法-无副作用 - 注意这里计算的是 “高度自适应” 前的高度，也就是实际高度\n     * 计算甘特图对应行的行高 - 即RowsInfo中每行对应的行高，动态计算的，因为tag行是动态的\n     * 【注意：这是最小高度】\n     * @param {*} rowItem this.rowsInfo 的单项\n     * @returns {number} 行高\n     */\n    calcRowHeightByRowsInfoItem(rowItem = {}) {\n      let h = 2 * rowPaddingTop\n\n      // tag 累计高度【包括margin】 整行高度 = row 上下padding + tag margintop【第一行tag不计算margin】 + tag高度\n      let tagTypeObj = this.getTagsMapByRowItem(rowItem)\n      let tagTypeNum = Object.keys(tagTypeObj).length\n      if (tagTypeNum > 0) { // 内有tag\n        h += (tagTypeNum * tagHeight + (tagTypeNum - 1) * tagMarginTop)\n\n        // 有数据的行高度不一样，至少也比 hasTagsDataMinRowHeight 高\n        h = Math.max(...[h, hasTagsDataMinRowHeight])\n      }\n\n      return Math.max(...[h, minRowHeight])\n    },\n\n    // 将宽高同步到dom\n    renderToDom() {\n      let gbRefDom = this.$refs['ganttBoxRefDom']\n      if (!gbRefDom) return\n      // tag拖拽区域\n      let paintWidth = +this.colsInfo.reduce((pre, next) => pre += Number(next.w), 0)\n      let paintHeight = +this.rowsInfo.reduce((pre, next) => pre += Number(next.h), 0)\n\n      // 存储方便使用\n      this.paintBoxInfo.width = paintWidth\n      this.paintBoxInfo.height = paintHeight\n\n      {\n        let paintBoxDom = this.$refs['paintBoxRefDom']\n        paintBoxDom.style.width = paintWidth + 'px'\n        paintBoxDom.style.height = paintHeight + 'px'\n      }\n\n      // 行\n      {\n        let nodes = gbRefDom.querySelectorAll('.paint-row') || []\n        nodes.forEach((dom, index) => {\n          utils.setDOMH(dom, this.rowsInfo[index].h)\n        })\n      }\n      // 列\n      {\n        let nodes = gbRefDom.querySelectorAll('.paint-col') || []\n        nodes.forEach((dom, index) => {\n          utils.setDOMW(dom, this.colsInfo[index].w)\n        })\n      }\n      { // 全屏甘特图的网格【宽高为整个甘特图宽高】 - 用于补充“画布内网格”未绘制的区域\n        let gtDom = this.$refs['ganttBoxRefDom']\n        let canvas = this.$refs['canvasGanttRefDom']\n        utils.setCanvasWH(canvas, utils.getDOMWH(gtDom).w, utils.getDOMWH(gtDom).h)\n      }\n      // 画布内网格canvas\n      {\n        let canvas = this.$refs['canvasGridRefDom']\n        utils.setCanvasWH(canvas, paintWidth, paintHeight)\n      }\n      { // 拖拽区域画布内canvas\n        let canvas = this.$refs['canvasGuideBoxRefDom']\n        utils.setCanvasWH(canvas, paintWidth, paintHeight)\n      }\n    },\n\n    /**\n     * 列信息构造\n     * @param {*} param0 \n     */\n    factoryColsInfoItem({ w, t }) {\n      return {\n        w: w, // 列宽\n        t: utils._date.format(t, 'YYYY-MM-DD HH:mm:ss'), // 时间\n        label: utils._date.format(t, 'YYYY-MM-DD') // 时间\n      }\n    },\n\n    // 计算甘特图每行高度，每列宽度，重要函数，渲染前提是这里的计算正确！！！\n    calcWHCore(rows = []) {\n      // 计算列 - 列宽\n      if (!rows || !rows.length) { // 默认读之前的行数据，因为可能拖动了，用props的行会丢失\n        rows = this.rowsInfo\n      }\n      let headerDom = this.$refs['headerBoxRefDom'] // 标题\n      if (!headerDom || !headerDom.parentNode) return\n      let headerWidth = utils.getDOMWH(headerDom).w\n      let wd = Math.max(...[headerCellMinWidth, (headerWidth / this.dateDuration).toFixed(2)])\n      let colsInfo = Array.from({ length: this.dateDuration }).map((item, index) => {\n        return this.factoryColsInfoItem({\n          w: wd,\n          t: utils._date.add(this.startDate, index, 'hour')\n        })\n      })\n\n      // 任务持续时间加减n天，需要在任务持续时间前后来个加减n天\n      if (colsInfo.length > 0) {\n        let durationArr = [colsInfo[0].label, colsInfo.at(-1).label]\n        let preArr = []\n        let nextArr = []\n        // 前 \n        let preDay = Math.abs(+this.decreaseDayNum)\n        if (preDay > 0) {\n          preArr = Array.from({ length: preDay }).map((item, index) => {\n            return this.factoryColsInfoItem({\n              w: wd,\n              t: utils._date.add(durationArr[0], -1 * (index + 1), 'hour')\n            })\n          })\n        }\n\n        // 后\n        let nextDay = Math.abs(+this.IncreaseDayNum)\n        if (nextDay > 0) {\n          nextArr = Array.from({ length: nextDay }).map((item, index) => {\n            return this.factoryColsInfoItem({\n              w: wd,\n              t: utils._date.add(durationArr[1], index + 1, 'hour')\n            })\n          })\n        }\n\n        colsInfo = [...preArr.reverse(), ...colsInfo, ...nextArr]\n\n      } else {\n        return console.error('任务持续时间为空！甘特图渲染失败！')\n      }\n\n      this.colsInfo = colsInfo\n\n      // 计算行 - 实际高度【高度 = 无tag行最小高度+ 有tag行高度(最小tag所在行高或者撑开的高度)】\n      let rowsInfo = rows.map(item => {\n        return {\n          ...item,\n          h: +this.calcRowHeightByRowsInfoItem(item), // 计算当前行的行高\n        }\n      })\n      this.rowsInfo = rowsInfo\n\n      // 甘特图高度处理\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      if (!ganttBoxRefDom) return\n      // 高度自适应 - 剩余高度太多则分配多余高度到有数据行\n      if (this.selfAdaptionGanTTHeight) {// 开启高度自适应\n        let { h: ganttHeight } = utils.getDOMWH(ganttBoxRefDom) // 获取自适应高度\n        let remainHeight = ganttHeight - this.paintTopVal - this.getSummaryRowsHeight() // 总高-标题高-合计行高 = 剩余画布高度\n        if (remainHeight <= 0) { // 父盒子没有设置最小高度则默认撑开 - 注意：只是初始渲染的高度，后面都以这个为准\n          remainHeight = this.rowsInfo.reduce((pre, next) => pre + next.h, 0)\n        }\n        let realH = rowsInfo.reduce((pre, next) => pre + next.h, 0) // 计算实际计算高度\n        if (remainHeight >= realH) {// 剩余高度大于计算高度,需要重新分配高度，有tag的数据行平分多出来的高度\n          // 计算有几行有tag数据\n          let hasTagRowsNum = 0\n          rowsInfo.map(item => {\n            if (item.tags && item.tags.length) {\n              hasTagRowsNum++\n            }\n          })\n\n          // 分配剩下的高度\n          let zlH = Number(((remainHeight - realH) / hasTagRowsNum).toFixed(6))\n          rowsInfo.map(item => {\n            if (item.tags && item.tags.length) {\n              item.h = Math.floor(zlH + item.h)\n            }\n          })\n\n        } else { // 实际高度超出-则显示纵向滚动条，保证中间部分高度拉满\n        }\n        this.ganTTBottomHeight = remainHeight\n      }\n\n      this.rowsInfo = rowsInfo\n    },\n    // 获取时间标题的单列宽\n    getTimeColW() {\n      if (!this.colsInfo.length) return 0\n      return this.colsInfo[0].w || 0\n    },\n    // 获取任务持续时间范围内的列宽总和\n    getDurationTimeWidth() {\n      return this.getTimeColW() * this.dateDuration\n    },\n    // 获取合计行高度\n    getSummaryRowsHeight() {\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      if (!ganttBoxRefDom) return 0\n      let tjRowNodes = ganttBoxRefDom.querySelectorAll('.stat-bottom') || []\n      let h = 0\n      for (let i = tjRowNodes.length - 1; i >= 0; i--) {\n        let nodeItem = tjRowNodes[i]\n        h += utils.getDOMWH(nodeItem).h\n      }\n      return h\n    },\n\n    // 刷新甘特图宽高\n    refreshGTTWH() {\n      this.calcWHCore()\n      this.renderToDom()\n      this.drawGridCanvas()\n      this.createTagList() // 生成tag数据\n\n      // 标记线\n      this.showAxisTime(this.markLineTime)\n      this.tickTimeLineHandle() // 当前时间-标记线\n    },\n\n    // tag 变化后需要调用的更新函数\n    tagChangThenRefreshAll() {\n      this.backfillTagListToRowsInfo() // tag变化了，刷新rowsInfo\n      // 重走渲染逻辑 - 因为行高是自动撑开的，因此需要刷新\n      this.refreshGTTWH() // 刷新甘特图宽高，刷新关联数据\n    },\n\n    //#endregion 宽高计算\n\n    //#region 需求-任务持续时间加减n天\n\n    // 获取任务持续时间前 “减n天” 在甘特图画布中的宽度\n    getdecreaseDayWidth() {\n      return this.getTimeColW() * Math.abs(this.decreaseDayNum)\n    },\n\n    //#endregion 需求-任务持续时间加减n天\n\n    //#region 横向滚动 scroll\n\n    // 滚动到上次滚动条百分比位置\n    scrollXToLastPercent() {\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      if (!scrollXBarDom) return\n      this.scrolledXPercent >= 0 && this.scrollGanTTXTo(scrollXBarDom.scrollWidth * this.scrolledXPercent / 100)\n    },\n\n    // 初始化横向滚动条初始距离，初始时应该滚到任务持续时间区间范围内\n    scrollToDurationTime() {\n      this.scrollGanTTXTo(this.getdecreaseDayWidth())\n    },\n    // 横向滚动到指定位置\n    scrollGanTTXTo(value = 0) {\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      if (!scrollXBarDom) return\n      scrollXBarDom.scrollLeft = value || 0\n    },\n    // 获取横向滚动距离\n    getScrollLeft() {\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      if (!scrollXBarDom) return 0\n      return scrollXBarDom.scrollLeft\n    },\n    scrollXHandle(e) {\n      this.closeAllMenu('scrollXHandle') // 关闭弹出的其他菜单，避免复杂定位问题\n\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      let scrollContentDom = this.$refs['paintBoxRefDom'] // 横向需要跟着滚动条滚动的内容\n      if (!ganttBoxRefDom || !scrollXBarDom || !scrollContentDom) return\n      let headerDomNodes = ganttBoxRefDom.querySelectorAll('.scrollX') // 需要跟着横向滚动的标题\n      let scrollLeft = -1 * (this.getScrollLeft() || 0)\n      headerDomNodes.forEach(nodeItem => {\n        // nodeItem.style.left = scrollLeft + 'px'\n        nodeItem.style.transform = `translateX(${scrollLeft}px)`\n      })\n      scrollContentDom.style.left = `${scrollLeft}px`\n\n      // 标记线更新位置\n      this.showAxisTime(this.markLineTime)\n      this.tickTimeLineHandle()\n\n      // 记录滚动百分比\n      this.scrolledXPercent = Number((this.getScrollLeft() / scrollXBarDom.scrollWidth).toFixed(6)) * 100\n    },\n    addScrollXEvent() {\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      if (!scrollXBarDom) return\n      scrollXBarDom.addEventListener('scroll', this.scrollXHandle, false)\n    },\n    removeScrollXEvent() {\n      let scrollXBarDom = this.$refs['scrollXBarDom'] // 横向滚动条\n      if (!scrollXBarDom) return\n      scrollXBarDom.removeEventListener('scroll', this.scrollXHandle)\n    },\n\n    //#endregion 横向滚动 scroll\n\n    //#region 纵向滚动 scroll\n\n    // 纵向滚动到指定位置\n    scrollGanTTYTo(value = 0) {\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      if (!scrollYBarDom) return\n      scrollYBarDom.scrollTop = value || 0\n    },\n\n    // 获取纵向滚动距离\n    getScrollTop() {\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      if (!scrollYBarDom) return 0\n      return scrollYBarDom.scrollTop\n    },\n    // 纵向滚动条滚动位置变化，同步到其他纵向滚动项\n    scrollYHandle(e) {\n      this.closeAllMenu('scrollYHandle') // 关闭弹出的其他菜单，避免复杂定位问题\n\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      if (!ganttBoxRefDom || !scrollYBarDom) return\n      let scrollDoms = ganttBoxRefDom.querySelectorAll('.scrollY') // 需要跟着纵向滚动的内容\n      let scrollTop = -1 * (this.getScrollTop() || 0)\n      scrollDoms.forEach(nodeItem => {\n        nodeItem.style.transform = `translateY(${scrollTop}px)`\n      })\n    },\n    // 鼠标滚轮滚动，滚动条滚动\n    mousewheelHandle(e) {\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      if (!scrollYBarDom) return\n      if (scrollYBarDom.scrollHeight === scrollYBarDom.offsetHeight) return // 【在甘特图内滚动鼠标，若甘特图有滚动条，滚动时触发的甘特图的滚动，没有则使用默认的滚动效果，也就是触发外层页面的滚动】\n\n      // 甘特图内有滚动条，则实现甘特图内部滚动效果\n      e.stopPropagation()\n      e.preventDefault()\n      // 防抖\n      this.scrollTimer && clearTimeout(this.scrollTimer)\n      this.scrollTimer = setTimeout(() => {\n        let dy = -e.deltaY || e.wheelDeltaY;\n        let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n        if (!scrollYBarDom) return\n        let scrollTop = scrollYBarDom.scrollTop\n        let distance = utils.getDOMWH(scrollYBarDom).h / 6; // 每次滚动6分之一\n        if (dy < 0) {\n          // console.log('向下');\n        } else {\n          // console.log('向上');\n          distance = -1 * distance\n        }\n        scrollYBarDom.scrollTop = scrollTop + distance\n        this.scrollYHandle()\n      })\n    },\n    addScrollYEvent() {\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      let paintBoxRefDom = this.$refs['paintBoxRefDom'] // 画布内容\n      if (!scrollYBarDom || !paintBoxRefDom) return\n      scrollYBarDom.addEventListener('scroll', this.scrollYHandle, false)\n      paintBoxRefDom.addEventListener('mousewheel', this.mousewheelHandle, false)\n    },\n    removeScrollYEvent() {\n      this.scrollTimer && clearTimeout(this.scrollTimer)\n      let scrollYBarDom = this.$refs['scrollYBarDom'] // 纵向滚动条\n      let paintBoxRefDom = this.$refs['paintBoxRefDom'] // 画布内容\n      if (!scrollYBarDom || !paintBoxRefDom) return\n      scrollYBarDom.removeEventListener('scroll', this.scrollYHandle)\n      paintBoxRefDom.removeEventListener('mousewheel', this.mousewheelHandle, false)\n    },\n\n    //#endregion 纵向滚动 scroll\n\n    //#region 点击图时，显示纵向标记线，用于筛选当前时间下贯穿的tag\n    clickShowMarkLine(e) {\n      if (!this.showMarkLine) return\n      let eventX = (e.x || e.pageX) || 0 // 点击事件触发x\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      if (!ganttBoxRefDom) return\n      let { left } = ganttBoxRefDom.getBoundingClientRect()\n      let x = eventX - left // 点击位置距离甘特图左侧距离\n      if (x < this.paintLeftVal) return // 点击的不是画布区域\n      let canvasLeft = this.ganTTLeftToCanvasLeft(x)\n      let currentTime = this.getStartTimeByLeft(canvasLeft)\n      this.showAxisTime(currentTime)\n\n      // 抛出当前时间贯穿的tags\n      this.$emit('changeMarkLineClick', {\n        markLineTime: currentTime, // 时间\n        inTags: this.getTimePierceTags(currentTime)\n      })\n    },\n\n    /**\n     * 显示时间线\n     * @param {*} time 时间线对应的时间 - 是画布中的！\n     * @param {*} ganttLeft 甘特图left！\n     */\n    showAxisTime(time = '', ganttLeft) {\n      if (!this.showMarkLine || !time) { // 不显示\n        this.markLine.visible = false\n        return\n      }\n      this.markLine = {\n        ...this.markLine,\n        visible: true,\n        left: !utils.isNull(ganttLeft) ? ganttLeft : this.canvasLeftToGanTTLeft(this.getLeftByStartTime(time)) + 'px',\n        title: utils._date.format(time, 'HH:mm')\n      }\n      // console.log(time, 222)\n      this.$emit('update:markLineTime', time)\n    },\n    //#endregion 点击图时，显示纵向标记线，用于筛选当前时间下贯穿的tag\n\n    //#region 定时标记当前时间\n\n    hide_TickTimerLine() {\n      this.currentTimeLine.visible = false\n    },\n    // 当前时间-标记线\n    tickTimeLineHandle() {\n      let tRange = this.getGanTTimeRange()\n      if (!tRange) return this.hide_TickTimerLine()\n      let { startTime, endTime } = tRange\n      let currentTime = new Date().getTime()\n      if (currentTime > endTime || currentTime < startTime) return this.hide_TickTimerLine()\n      // 时间范围内\n      let x = this.getLeftByStartTime(currentTime)\n      if (x >= this.getScrollLeft()) { // 考虑横向滚动条 - 左侧标题栏遮住的不显示\n        this.currentTimeLine = {\n          ...this.currentTimeLine,\n          visible: true,\n          left: this.canvasLeftToGanTTLeft(x) + 'px',\n          title: utils._date.format(currentTime, 'HH:mm'),\n        }\n      } else {\n        this.hide_TickTimerLine()\n      }\n    },\n    // 来根时间线标记当前时间\n    init_TickTimer() {\n      clearTimeout(this.tickCurrentTimer)\n      this.tickCurrentTimer = setTimeout(() => {\n        this.tickTimeLineHandle()\n        this.init_TickTimer()\n      }, 1000)\n    },\n\n    //#endregion 定时标记当前时间\n\n    //#region 右键菜单\n\n    rightMenu_init() {\n      let paintBoxRefDom = this.$refs['paintBoxRefDom']\n      if (!paintBoxRefDom) return\n      // 自定义鼠标右键菜单栏\n      paintBoxRefDom.oncontextmenu = (ev) => {\n        let e = ev || window.event;\n        // console.log(ev, '鼠标右键')\n        e.preventDefault();\n        // e.stopPropagation();\n\n        // 关闭其他菜单\n        this.closeAllMenu('rightMenu_init')\n\n        // 只读模式\n        if (this.readOnly) return false\n\n        // 1.正在拖动时不可打开右键菜单\n        if (this.draging.tagItemDom) {\n          return false;\n        }\n\n        // 显示右键菜单\n        let _menu = this.$refs['rightClickMenuRefDom']\n        if (!_menu) return\n        // 显示自定义的菜单调整位置\n        let x = e.offsetX // 鼠标指针位置相对于触发事件的对象的 x 坐标和y坐标\n        let y = e.offsetY\n        // 2.禁用行中不可以打开右键菜单\n        if (this.disabledRowSilent && this.judgeYisInDisabledRow(y)) {\n          return false;\n        }\n\n        _menu.style.display = 'block';\n\n        // 记录位置\n        this.rightMenuTemObj = this.pixelToDataCoordinate(x, y)\n\n        // 处理边界显示问题\n        let { w: paintW, h: paintH } = utils.getDOMWH(this.$refs['boxRightRefDom']) // 画布可视区宽高\n        let scrollTop = this.getScrollTop() || 0; // 获取垂直滚动条位置\n        let scrollLeft = this.getScrollLeft() || 0; // 获取水平滚动条位置\n        let { w, h } = utils.getDOMWH(_menu) // 菜单宽高\n\n        if (w + x > paintW + scrollLeft) {\n          x = x - w\n        }\n        if (y + h > paintH + scrollTop) {\n          y = y - h\n        }\n\n        _menu.style.left = x + 'px';\n        _menu.style.top = y + 'px';\n        // console.log(this.rightMenuTemObj, this.rightMenuTemObj.coords)\n        return false;  //阻止系统右键菜单\n      }\n\n      // 失去焦点 - 关闭菜单\n      // paintBoxRefDom.onblur = () => {\n      //   // console.log('画布失去焦点 - 关闭菜单')\n      //   this.rightMenu_close()\n      // }\n    },\n    // 关闭右键菜单\n    rightMenu_close() {\n      let _menu = this.$refs['rightClickMenuRefDom']\n      if (!_menu) return\n      _menu.style.display = 'none';\n    },\n\n    /**\n     * 菜单事件\n     * @param {*} e 鼠标e\n     * @param {*} menuItem 菜单触发项\n     * @param {*} btnIndex 菜单触发索引\n     */\n    rightClickMenuEvent(e, menuItem, btnIndex) {\n      if (this.readOnly || !menuItem || menuItem.disabled) return\n      this.$emit('rightClickMenuClick', {\n        e,// 鼠标e\n        target: menuItem, // 菜单触发项\n        triggerIndex: btnIndex, // 菜单触发索引\n        coordsInfo: this.rightMenuTemObj\n      })\n      this.rightMenu_close()\n    },\n\n    //#endregion 右键菜单\n\n    //#region 左侧任务列操作菜单\n\n    taskMenu_Open(e, row = {}) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      // 关闭其他菜单\n      this.closeAllMenu('taskMenu_Open')\n\n      if (this.readOnly) return // 只读模式\n      if (!row || !Object.keys(row).length) return\n      let taskBtnList = []\n      // 行内单独设置的优先，没有就使用全局配置的任务列菜单\n      if (row.taskMenuList) {\n        taskBtnList = row.taskMenuList\n      } else {\n        taskBtnList = this.taskMenuList\n      }\n      if (taskBtnList.length) {\n        let rowTop = this.calcRowTopByRowLabel(row.label)\n\n        let x = this.paintLeftVal + 4 // 带点偏移\n        let y = this.paintTopVal + rowTop + row.h - this.getScrollTop() - 10 // 带点偏移\n\n        this.taskMenu.visible = true\n        this.taskMenu.btnList = taskBtnList\n        this.taskMenu = {\n          ...this.taskMenu,\n          visible: true,\n          btnList: taskBtnList,\n          selectRow: {\n            ...row\n          }\n        }\n        this.$nextTick(() => {\n          // 边界处理\n          let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n          let taskMenuRefDom = this.$refs['taskMenuRefDom']\n          if (ganttBoxRefDom && taskMenuRefDom) {\n            let gth = utils.getDOMWH(ganttBoxRefDom).h\n            let menuh = utils.getDOMWH(taskMenuRefDom).h\n            if (menuh + y > gth) {\n              y = gth - menuh\n            }\n          } else {\n            return\n          }\n\n          this.taskMenu = {\n            ...this.taskMenu,\n            style: {\n              left: x + 'px',\n              top: y + 'px'\n            }\n          }\n        })\n\n      } else {\n        this.taskMenu_close()\n      }\n    },\n    // 关闭\n    taskMenu_close() {\n      this.taskMenu = {\n        ...this.taskMenu,\n        visible: false,\n        btnList: [],\n        selectRow: {}\n      }\n    },\n    /**\n     * 左侧任务列操作菜单事件\n     * @param {*} e 鼠标e\n     * @param {*} menuItem 菜单触发项\n     * @param {*} btnIndex 菜单触发索引\n     */\n    taskMenuBtnClick(e, menuItem, btnIndex) {\n      if (this.readOnly || !menuItem || menuItem.disabled) return\n      this.$emit('taskMenuBtnClick', {\n        e,// 鼠标e\n        target: menuItem, // 菜单触发项\n        triggerIndex: btnIndex, // 菜单触发索引\n        rowData: {\n          ...this.taskMenu.selectRow,\n          tags: this.getTagsByRowLabel(this.taskMenu.selectRow.label)\n        }\n      })\n      this.taskMenu_close()\n    },\n\n    //#endregion 左侧任务列操作菜单\n\n    //#region 重要的事件参数构造\n\n    // 获取指定label行下的所有tags\n    getTagsByRowLabel(rowLabel = '') {\n      if (!rowLabel) return []\n      return this.tagList.filter(item => item.parentKey === rowLabel).map(item => this.backfillTag(item))\n    },\n\n    // 获取指定时间贯穿的所有tag\n    getTimePierceTags(time = '') {\n      if (!time) return []\n      let arr = []\n      let timeStamp = new Date(time).getTime()\n      this.tagList.map(item => {\n        let { startTime, endTime } = item\n        if (timeStamp >= new Date(startTime).getTime() && timeStamp <= new Date(endTime).getTime()) {\n          arr.push({\n            ...item,\n            data: this.backfillTag(item)\n          })\n        }\n      })\n      return arr\n    },\n\n    // 获取甘特图完整行数据 - 格式和props.rows一致\n    getRowsData() {\n      // 刷新rowsInfo -> 刷新dom -> 重新生成taglist\n      this.backfillTagListToRowsInfo()\n      this.refreshGTTWH() // 刷新甘特图宽高，刷新关联数据\n\n      return this.rowsInfo.map(row => {\n        let item = {\n          ...row,\n          tags: row.tags.map(tgItem => {\n            let tgItemCopy = {\n              ...tgItem\n            }\n            // 删除甘特图辅助变量\n            delete tgItemCopy.tagId\n            return tgItemCopy\n          })\n        }\n        // 删除甘特图辅助变量\n        delete item.h\n\n        return item\n      })\n    },\n\n    // 获取所有被选中的tag\n    getAllSelectedTags() {\n      let arr = []\n      this.tagList.map(item => {\n        if (item.selected) {\n          arr.push({\n            ...item,\n            data: this.backfillTag(item)\n          })\n        }\n      })\n\n      return arr\n    },\n\n    //#endregion 重要的事件参数\n\n    // 关闭甘特图所有菜单\n    closeAllMenu(eventHandle) {\n      // console.log('触发函数:', eventHandle)\n      // 关闭右键菜单\n      this.rightMenu_close()\n      this.taskMenu_close()\n      this.tagMenu_close()\n    },\n\n    // 甘特图失去焦点\n    ganTTblur() {\n      // console.log('甘特图失去焦点')\n      this.closeAllMenu('ganTTblur')\n    },\n    // 甘特图点击\n    ganTTClick(e) {\n      // console.log('甘特图点击')\n      this.closeAllMenu('ganTTClick')\n      this.clickShowMarkLine(e)\n    },\n    // 画布resize -重新计算相关布局元素\n    event_windowResize() {\n      clearTimeout(this.tickTimer)\n      this.tickTimer = setTimeout(() => {\n        console.log('甘特图 resize...')\n        try {\n          this.closeAllMenu('event_windowResize')\n          this.refreshGTTWH() // 计算甘特图宽高\n\n          // 初次渲染时滚动横向滚动条到任务开始时间位置\n          if (this.isFirstInit) {\n            this.$nextTick(() => {\n              this.isFirstInit = false\n              this.scrollToDurationTime()\n            })\n          } else { // 滚动到上次滚动条百分比位置 - 保证resize后展示的列的位置一致 - 有问题，未实现！\n            // this.$nextTick(()=>{\n            //   this.scrollXToLastPercent()\n            // })\n          }\n        } catch (error) {\n          console.error('甘特图 resize error：', error)\n        }\n      }, 50)\n    },\n    // 注意：每次init后tagid将重新生成，用之前的tagid将无法匹配\n    init() {\n      // 清空变量\n      this.dodgeTagsInfo = {} // tag拖动的避让效果变量，每次重新init渲染时清空\n\n      this.calcWHCore(cloneObj(this.rows)) // 初始根据props生成行列数据\n      this.addEvents()\n      this.init_TickTimer() // 来根时间线标记当前时间\n    },\n    addEvents() {\n      this.removeEvents()\n\n      let boxDom = this.$refs['ganttBoxRefDom']\n      // 1.指定resize事件\n      resizeObserver = new ResizeObserver(this.event_windowResize) // 会在绘制前和布局后调用 resize 事件，因此不用提前调用 event_windowResize 方法\n      // 2.指定该resize事件的触发dom\n      resizeObserver.observe(boxDom);\n\n      this.addScrollXEvent()\n\n      // 启用高度自适应功能-监控纵向滚动条\n      // if(this.selfAdaptionGanTTHeight){\n      this.addScrollYEvent()\n      // }\n\n      // 右键菜单\n      this.rightMenu_init()\n    },\n    removeEvents() {\n      let ganttBoxRefDom = this.$refs['ganttBoxRefDom']\n      ganttBoxRefDom && resizeObserver?.unobserve(ganttBoxRefDom) // 结束对指定 Element 的监听。\n\n      // 横向纵向滚动条\n      this.removeScrollXEvent()\n      this.removeScrollYEvent()\n\n      // 清除定时器 - 定时刷新当前时间\n      clearTimeout(this.tickCurrentTimer)\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.removeEvents()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@mixin scrollBar($trackColor: transparent, $thumbColor: #84899155) {\n  &::-webkit-scrollbar-track-piece {\n    background: $trackColor;\n    border-radius: 20px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: $thumbColor;\n    border-radius: 20px;\n  }\n}\n\n@mixin eclipse {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n$activeColor: #365BE4;\n$activeBg: #E8EDFF;\n\n.gt-title {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: none;\n  box-sizing: border-box;\n}\n\n.gantt-chart-wrap {\n  // padding-top: 25px;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.gap {\n  height: 25px;\n  width: 100%;\n  flex: none;\n  position: relative;\n  z-index: 5;\n}\n\n.gantt-chart-box {\n  flex-grow: 1;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  &:hover {\n\n    .scrollXBar,\n    .scrollYBar {\n      opacity: 1 !important;\n    }\n  }\n\n  >canvas {\n    left: 0;\n    top: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 7;\n    pointer-events: none;\n  }\n\n  @mixin cm {\n    position: relative;\n    z-index: 2;\n  }\n\n  // 标题列通用样式\n  .headerCol {\n    flex: none;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    box-sizing: border-box;\n\n    >.name {\n      @include eclipse;\n      width: 100%;\n      box-sizing: border-box;\n    }\n\n    // grid y\n    .sLine {\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 1px;\n      height: 100%;\n      background: #000000;\n      z-index: 3;\n      pointer-events: none;\n\n      &:first-child {\n        display: none;\n      }\n    }\n  }\n\n  .scrollX {\n    display: flex;\n    flex-direction: flex-start;\n    align-items: center;\n    height: 100%;\n    flex: none;\n    position: relative;\n  }\n\n  $headerBg: #e9ebf0;\n\n  .row-header {\n    @include cm;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    text-align: center;\n    background-color: $headerBg;\n    box-sizing: border-box;\n    z-index: 5;\n\n    .header-right {\n      flex: auto;\n      height: 100%;\n      overflow: hidden;\n\n      .paint-col {\n        @extend .headerCol;\n        // &:first-child .sLine {\n        //   display: none;\n        // }\n      }\n    }\n\n  }\n\n  .row-bottom {\n    @include cm;\n    display: flex;\n    justify-content: space-between;\n\n    .box-left {\n      display: flex;\n      flex-direction: column;\n      flex: none;\n      position: relative;\n\n      .paint-row {\n        width: 100%;\n        flex: none;\n        text-align: center;\n        justify-content: center;\n        display: flex;\n        align-items: center;\n        background-color: #fafafa;\n        position: relative;\n        box-sizing: border-box;\n\n        &.disabled {\n          flex: none;\n          color: #B5B6BF;\n        }\n\n        &.canSelected {\n          // 可以打开任务操作菜单\n          cursor: pointer;\n\n          &:hover {\n            opacity: 0.7;\n          }\n        }\n\n        $arrowWd: 8px;\n\n        &.selected {\n          &::after {\n            content: ' ';\n            pointer-events: none;\n            position: absolute;\n            right: -7px;\n            bottom: -7px;\n            border-right: $arrowWd solid $activeColor;\n            border-top: $arrowWd solid transparent;\n            border-left: $arrowWd solid transparent;\n            border-bottom: $arrowWd solid transparent;\n            transform: rotate(225deg);\n          }\n        }\n\n        // &:first-child .sLine {\n        //   display: none;\n        // }\n\n        >.name {\n          @include eclipse;\n          width: 100%;\n        }\n\n        // grid x\n        .sLine {\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 100%;\n          height: 1px;\n          background: #000000;\n          z-index: 3;\n          pointer-events: none;\n        }\n      }\n    }\n\n    .box-right {\n      flex: auto;\n      overflow: hidden;\n      position: relative;\n\n      // .box-paint-scroll {\n      //   overflow-y: hidden;\n      //   overflow-x: auto;\n      //   width: 100%;\n      //   height: 100%;\n      //   @include scrollBar;\n      // }\n    }\n\n    // 画布区域\n    .box-paint {\n      // background-color: #dddddd;\n      position: relative;\n      box-sizing: border-box;\n\n      canvas {\n        left: 0;\n        top: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        pointer-events: none;\n      }\n    }\n\n    // 滚动条\n    .scrollXBar {\n      transition: all ease 0.2s;\n      opacity: 0.3;\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      overflow-y: hidden;\n      overflow-x: auto;\n      width: 100%;\n      height: 10px;\n      @include scrollBar;\n      z-index: 999;\n\n      >div {\n        height: 10px;\n      }\n    }\n\n    .scrollYBar {\n      transition: all ease 0.2s;\n      opacity: 0.3;\n      position: absolute;\n      right: 0;\n      top: 0;\n      overflow-y: auto;\n      overflow-x: hidden;\n      height: 100%;\n      width: 10px;\n      @include scrollBar;\n      z-index: 999;\n\n      >div {\n        width: 10px;\n      }\n    }\n  }\n\n  // 最后的统计行\n  .stat-bottom {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n    background-color: $headerBg;\n    position: relative;\n    z-index: 5;\n\n    .stat-bottom_title {\n      flex: none;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .stat-bottom_right {\n      flex: auto;\n      height: auto;\n      overflow: hidden;\n\n      .stat-bottom_col {\n        text-align: center;\n        @extend .headerCol;\n      }\n    }\n  }\n}\n\n.menu-common {\n  box-sizing: border-box;\n  background: #FFFFFF;\n  box-shadow: 0px 4px 12px 0px rgba(82, 92, 108, 0.16);\n  border-radius: 4px;\n  color: #11152B;\n  font-family: PingFangSC-Regular;\n  font-size: 14px;\n  color: #11152B;\n  line-height: 18px;\n  font-weight: 400;\n  text-align: center;\n}\n\n// 鼠标右键菜单\n.rightClickMenu {\n  min-width: 104px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: none;\n  z-index: 7;\n  transition: top ease 0.2s;\n  user-select: none;\n  @extend .menu-common;\n  // padding: 5px;\n\n  ul,\n  li {\n    list-style: none;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n\n    li {\n      font-size: 14px;\n      cursor: pointer;\n      box-sizing: border-box;\n      padding: 5px 8px;\n      // background-color: #ffffff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #000000;\n\n      &.disabled {\n        cursor: not-allowed;\n        background-color: #dddddd;\n      }\n\n      &:not(.disabled):hover {\n        color: $activeColor;\n        background-color: $activeBg;\n      }\n    }\n  }\n}\n\n// 左侧任务列菜单\n.task-menu {\n  min-width: 76px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 10;\n  transition: top ease 0.2s;\n  user-select: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  @extend .menu-common;\n\n  li {\n    list-style: none;\n    font-size: 14px;\n    cursor: pointer;\n    box-sizing: border-box;\n    padding: 5px 8px;\n    // background-color: #ffffff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #000000;\n\n    &.disabled {\n      cursor: not-allowed;\n      background-color: #dddddd;\n    }\n\n    &:not(.disabled):hover {\n      color: $activeColor;\n      background-color: $activeBg;\n    }\n  }\n}\n\n// 右键tag菜单\n.tag-menu {\n  @extend .task-menu;\n}\n\n// 单独更改tag样式 demo\n:deep(.tagSpecial) {\n  font-weight: bold;\n  color: #000000;\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5e75bc6a&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=5e75bc6a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5e75bc6a\",\n  null\n  \n)\n\nexport default component.exports","<!-- 甘特图vue2 -->\n<template>\n  <div class=\"wrap\">\n    <div class=\"header\" v-if=\"showOther\">\n      <!--\n      <span>显示模式：</span>\n      <el-select\n        style=\"width: 200px;\"\n        v-model=\"showMode\"\n        placeholder=\"请选择\"\n        @change=\"filterGanTTTags\"\n      >\n        <el-option\n          v-for=\"item in options\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n      -->\n\n      <el-date-picker\n          v-model=\"dateValue\"\n          @change = \"handleChange\"\n          type=\"date\"\n          placeholder=\"日期\"\n          format=\"yyyy/MM/dd\"\n          value-format=\"yyyy/MM/dd\"\n      />\n\n      <!--\n      <div class=\"legend\">\n        <span\n          ><i :style=\"{ backgroundColor: legendAll[0].color }\"></i\n          >{{ legendAll[0].label }}</span\n        >\n        <span\n          ><i :style=\"{ backgroundColor: legendAll[1].color }\"></i\n          >{{ legendAll[1].label }}</span\n        >\n        <span><i :style=\"{ backgroundColor: legendAll[2].color }\"></i></span>\n        <span\n          ><i :style=\"{ backgroundColor: legendAll[3].color }\"></i\n          >{{ legendAll[3].label }}</span\n        >\n      </div>\n\n      <el-checkbox v-model=\"showMarkLine\" style=\"margin-left: 20px\"\n        >显示标记线</el-checkbox\n      >\n\n      <el-button type=\"primary\" style=\"margin-left: 20px\" @click=\"logParams\"\n        >打印重要参数</el-button\n      >\n      -->\n    </div>\n    <div class=\"bottom\">\n      <div :class=\"{ 'left-box': true, showDetail: showDetail }\">\n        <div class=\"gt1\" style=\"height: 400px\">\n          <!-- 默认值测试 -->\n          <ganttChartVue\n            ref=\"ganTT1\"\n            v-bind=\"ganTT1Option\"\n            :showMarkLine=\"showOther ? showMarkLine : false\"\n            :markLineTime.sync=\"markLineTime\"\n            @changeMarkLineClick=\"changeMarkLineClick1\"\n            @rightClickMenuClick=\"rightClickMenuClick1\"\n            @taskMenuBtnClick=\"taskMenuBtnClick\"\n            @tagMenuBtnClick=\"tagMenuBtnClick1\"\n          />\n        </div>\n\n        <!--\n        <div style=\"margin-top: 50px\" v-if=\"showOther\">\n          <el-button type=\"primary\" @click=\"withdraw\">撤回</el-button>\n        </div>\n        <div v-if=\"showOther\" class=\"gt1\">\n          // 调用demo\n          <ganttChartVue\n            ref=\"ganTT2\"\n            v-bind=\"ganTT2Option\"\n            :showMarkLine=\"showMarkLine\"\n            :markLineTime.sync=\"markLineTime\"\n            @changeMarkLineClick=\"changeMarkLineClick2\"\n            @rightClickMenuClick=\"rightClickMenuClick2\"\n            @taskMenuBtnClick=\"taskMenuBtnClick\"\n            @tagDragStart=\"tagDragStart\"\n            @tagDragEnd=\"tagDragEnd2\"\n            @tagContextmenu=\"tagContextmenuHandle2\"\n            @tagMenuBtnClick=\"tagMenuBtnClick2\"\n            @tagClick=\"tagClick2\"\n            @closeTagTimeDialog=\"closeTagTimeDialog\"\n          >\n            // tag tip内容\n            <template #tagTip=\"{ tagData }\">\n              <div class=\"myTagTip\">\n                <p>标题：</p>\n                <p>自定义tag内容： {{ tagData.label + \"abcdef\" }}</p>\n                <p>说明11111</p>\n              </div>\n            </template>\n          </ganttChartVue>\n        </div>\n        -->\n      </div>\n      <!--\n      <div\n        v-if=\"showOther\"\n        :class=\"{ 'right-box': true, showDetail: showDetail }\"\n      >\n        <div class=\"arrow\" @click=\"changeShowDetail\">详细信息</div>\n        // 内容\n        <div class=\"detail-content\" v-if=\"showDetail\">\n          <p>详细信息xxxx。。。。</p>\n        </div>\n      </div>\n      -->\n      <el-drawer\n          :visible.sync=\"drawer\"\n      >\n        <el-tabs v-model=\"activeName\" type=\"card\">\n          <el-tab-pane label=\"基础信息\" name=\"1\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n              <el-form-item label=\"设备名称\">\n                <el-select v-model=\"form.name\" placeholder=\"请选择设备名称\">\n                  <el-option v-for=\"item in optionList\" :label=\"item.label\" :value=\"item.label\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"流转卡号\">\n                <el-input v-model=\"form.number\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"工艺号\">\n                <el-input type=\"textarea\" v-model=\"form.desc\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"长度\">\n                <el-input v-model=\"form.length\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"时间\n        \">\n                <el-time-picker\n                    is-range\n                    v-model=\"form.times\"\n                    value-format=\"HH:mm\"\n                    format=\"HH:mm\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始时间\"\n                    end-placeholder=\"结束时间\"\n                    placeholder=\"选择时间范围\">\n                </el-time-picker>\n              </el-form-item>\n              <el-form-item>\n                <el-button @click=\"drawer = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"onSave\">保存</el-button>\n              </el-form-item>\n            </el-form>\n          </el-tab-pane>\n          <el-tab-pane label=\"染缸参数\" name=\"2\">染缸参数</el-tab-pane>\n          <el-tab-pane label=\"订单信息\" name=\"3\">订单信息</el-tab-pane>\n        </el-tabs>\n      </el-drawer>\n    </div>\n  </div>\n</template>\n<script>\nimport { cloneObj } from \"./index\";\nimport ganttChartVue from \"../packages/components/ganttChartVue/index.vue\"; // 本地调试\n// import ganttChartVue from '../../../dist/gantt-chart-vue.umd.min.js' // 测试编译后的文件\nimport { utils } from '../packages/components/ganttChartVue/index'\n\nexport default {\n  components: {\n    ganttChartVue,\n  },\n  data() {\n    return {\n      drawer: false,\n      activeName: \"1\",\n      optionList: [\n        { label: \"R21\", value:\"R21\"},\n        { label: \"R22\", value:\"R22\"},\n        { label: \"R23\", value:\"R23\"},\n        { label: \"R24\", value:\"R24\"},\n        { label: \"R25\", value:\"R25\"},\n        { label: \"R26\", value:\"R26\"},\n        { label: \"R27\", value:\"R27\"},\n\n      ],\n      form: {\n        name: \"\",\n        number: \"\",\n        desc: \"\",\n        length: \"\",\n        times: []\n      },\n      dateValue: utils._date.format(new Date(), 'YYYY/MM/DD'),\n      showOther: true, // 调试\n      showMode: 1,\n      options: [\n        {\n          label: \"图2显示全部\",\n          value: 1,\n        },\n        {\n          label: \"图2不显示停机\",\n          value: 2,\n        },\n      ],\n      legendAll: [\n        {\n          label: \"模型预排\",\n          color: \"#365ce5\",\n          type: 1, // 用于判定同一网格行内具体所属行\n        },\n        {\n          label: \"生产实绩\",\n          color: \"#39c236\",\n          type: 2, // 用于判定同一网格行内具体所属行\n        },\n        {\n          label: \"计划停机1\",\n          color: \"#f5212d\",\n          type: 3, // 用于判定同一网格行内具体所属行\n        },\n        {\n          label: \"计划停机\",\n          color: \"#ff9c1b\",\n          type: 4, // 用于判定同一网格行内具体所属行\n        },\n      ],\n      showDetail: false,\n\n      ganTT1Option: {\n        readOnly: false, // 只读模式\n        title: \"设备名称\",\n        legend: [\n          {\n            label: \"模型预排\",\n            color: \"#365ce5\",\n            type: 1, // 用于判定同一网格行内具体所属行\n            dragable: true, // 此类型tag是否可以拖动，也可以在rows中配置单个tag是否可以拖动\n            closeTip: false, // 显示tag tip，也可以在rows中配置单个tag是否关闭提示\n            btnList: [\n              // 右键菜单按钮列表\n              // {\n              //   label: \"tag menu btn1\",\n              //   disabled: false,\n              // },\n              // {\n              //   label: \"tag menu btn2\",\n              //   disabled: false,\n              // },\n              // {\n              //   label: \"tag menu btn3禁用\",\n              //   disabled: true,\n              // },\n            ],\n          },\n          {\n            label: \"生产实绩\",\n            color: \"#39c236\",\n            type: 2, // 用于判定同一网格行内具体所属行\n          },\n          {\n            label: \"计划停机1\",\n            color: \"#f5212d\",\n            type: 3, // 用于判定同一网格行内具体所属行\n            closeTip: true, // 关闭此大类的tag tip，若tag自行设置有closeTip，则以tag 内的为准\n          },\n          {\n            label: \"计划停机2\",\n            color: \"#ff9c1b\",\n            type: 4, // 用于判定同一网格行内具体所属行\n          },\n        ],\n        startDate: utils._date.format(new Date(), 'YYYY/MM/DD'),\n        dateDuration: 24,\n        // 甘特图右键菜单\n        rightClickMenuList: [\n          {\n            label: \"新增\",\n            disabled: false,\n          }\n        ],\n        rows: [\n          {\n            label: \"R20\",\n            labelValue:\"2管\",\n            tags: [\n              // 注意：属性在 backfillTag 方法中声明才会生效，其他数据会统一放到 tag.data 中,属于不被承认的外部数据，虽然也能实现。。。\n              {\n                startTime: '2024/08/31 02:10',\n                endTime: '2024/08/31 06:10',\n                label: \"249495966|12345|华东*市|黑色\",\n                bgColor: \"#ff9c1b\",\n                type: 1,\n                closeTip: true, // 不显示此tag的tip，注意：只有true|false才会生效\n                dragable: true, // 此类型tag是否可以拖动,优先级最高，不设置将取legend的dragable，都没有则禁止拖动，注意：只有true|false才会生效\n                className: \"tagSpecial\", // 可单独设置tag样式名\n                selected: true, // 当前tag是否选中-有选中样式\n                // preIcon: \"iconfont icon-shijian\", // tag前的图标\n                hide: false, // 是否隐藏此tag\n              },\n              {\n                startTime: \"2024/08/31 06:20\",\n                endTime: \"2024/08/31 09:10\",\n                label: \"249495966|12345|华东*市|紫色\",\n                bgColor: \"#ff9c1b\",\n                type: 1,\n                dragable: true,\n              },\n              {\n                startTime: \"2024/08/31 14:10\",\n                endTime: \"2024/08/31 16:10\",\n                label: \"249495966|12345|华东*市|红色\",\n                bgColor: \"#03B48A\",\n                type: 1,\n                dragable: true,\n              },\n              {\n                startTime: \"2024/08/31 010:00\",\n                endTime: \"2024/08/31 12:10\",\n                label: \"249495966|12345|华东*市|黄色\",\n                bgColor: \"#80B4DB\",\n                type: 1,\n                dragable: true,\n              },\n              {\n                startTime: \"2024/08/31 16:30\",\n                endTime: \"2024/08/31 18:00\",\n                label: \"249495966|12345|华东*市|天蓝色\",\n                bgColor: \"#80B4DB\",\n                type: 1,\n                dragable: true,\n              },\n            ],\n          },\n          {\n            label: \"R21\",\n            labelValue:\"2管\",\n            tags: [\n              {\n                startTime: \"2024/08/31 02:10\",\n                endTime: \"2024/08/31 06:10\",\n                bgColor: \"#AE7BCF\",\n                label: \"249495966|12345|华东*市|天蓝色\",\n                type: 1,\n              },\n              {\n                startTime: \"2024/08/31 08:10\",\n                endTime: \"2024/08/31 10:10\",\n                bgColor: \"#AE7BCF\",\n                label: \"249495966|12345|华东*市|天蓝色\",\n                type: 1,\n              },\n            ],\n          },\n          {\n            label: \"R22\",\n            labelValue:\"2管\",\n            tags: [],\n          },\n          {\n            label: \"R23\",\n            labelValue:\"2管\",\n            tags: [\n              {\n                startTime: \"2024/08/31 02:10\",\n                endTime: \"2024/08/31 06:10\",\n                label: \"249495966|12345|华东*市|黑色\",\n                bgColor: \"#0E3A5F\",\n                type: 1,\n              },\n            ],\n          },\n          {\n            label: \"R24\",\n            labelValue:\"2管\",\n            tags: [],\n          },\n          {\n            label: \"R25\",\n            labelValue:\"2管\",\n            tags: [],\n          },\n          {\n            label: \"R26\",\n            labelValue:\"2管\",\n            disabled: true, // 禁止响应事件\n            tags: [],\n          },\n          {\n            label: \"R27\",\n            labelValue:\"2管\",\n            tags: [],\n          },\n        ]\n      },\n\n      ganTT1OptionRows: [\n        {\n          label: \"R20\",\n          labelValue:\"2管\",\n          tags: [\n            // 注意：属性在 backfillTag 方法中声明才会生效，其他数据会统一放到 tag.data 中,属于不被承认的外部数据，虽然也能实现。。。\n            {\n              startTime: \"2024/08/31 02:10\",\n              endTime: \"2024/08/31 06:10\",\n              label: \"249495966|12345|华东*市|黑色\",\n              bgColor: \"#ff9c1b\",\n              type: 1,\n              closeTip: true, // 不显示此tag的tip，注意：只有true|false才会生效\n              dragable: true, // 此类型tag是否可以拖动,优先级最高，不设置将取legend的dragable，都没有则禁止拖动，注意：只有true|false才会生效\n              className: \"tagSpecial\", // 可单独设置tag样式名\n              selected: true, // 当前tag是否选中-有选中样式\n              // preIcon: \"iconfont icon-shijian\", // tag前的图标\n              hide: false, // 是否隐藏此tag\n            },\n            {\n              startTime: \"2024/08/31 06:20\",\n              endTime: \"2024/08/31 09:10\",\n              label: \"249495966|12345|华东*市|紫色\",\n              bgColor: \"#ff9c1b\",\n              type: 1,\n              dragable: true,\n            },\n            {\n              startTime: \"2024/08/31 14:10\",\n              endTime: \"2024/08/31 16:10\",\n              label: \"249495966|12345|华东*市|红色\",\n              bgColor: \"#03B48A\",\n              type: 1,\n              dragable: true,\n            },\n            {\n              startTime: \"2024/08/31 010:00\",\n              endTime: \"2024/08/31 12:10\",\n              label: \"249495966|12345|华东*市|黄色\",\n              bgColor: \"#80B4DB\",\n              type: 1,\n              dragable: true,\n            },\n            {\n              startTime: \"2024/08/31 16:30\",\n              endTime: \"2024/08/31 18:00\",\n              label: \"249495966|12345|华东*市|天蓝色\",\n              bgColor: \"#80B4DB\",\n              type: 1,\n              dragable: true,\n            },\n          ],\n        },\n        {\n          label: \"R21\",\n          labelValue:\"2管\",\n          tags: [\n            {\n              startTime: \"2024/08/31 02:10\",\n              endTime: \"2024/08/31 06:10\",\n              bgColor: \"#AE7BCF\",\n              label: \"249495966|12345|华东*市|天蓝色\",\n              type: 1,\n            },\n            {\n              startTime: \"2024/08/31 08:10\",\n              endTime: \"2024/08/31 10:10\",\n              bgColor: \"#AE7BCF\",\n              label: \"249495966|12345|华东*市|天蓝色\",\n              type: 1,\n            },\n          ],\n        },\n        {\n          label: \"R22\",\n          labelValue:\"2管\",\n          tags: [],\n        },\n        {\n          label: \"R23\",\n          labelValue:\"2管\",\n          tags: [\n            {\n              startTime: \"2024/08/31 02:10\",\n              endTime: \"2024/08/31 06:10\",\n              label: \"249495966|12345|华东*市|黑色\",\n              bgColor: \"#0E3A5F\",\n              type: 1,\n            },\n          ],\n        },\n        {\n          label: \"R24\",\n          labelValue:\"2管\",\n          tags: [],\n        },\n        {\n          label: \"R25\",\n          labelValue:\"2管\",\n          tags: [],\n        },\n        {\n          label: \"R26\",\n          labelValue:\"2管\",\n          disabled: true, // 禁止响应事件\n          tags: [],\n        },\n        {\n          label: \"R27\",\n          labelValue:\"2管\",\n          tags: [],\n        },\n      ],\n\n      // 甘特图配置项\n      ganTT2Option: {\n        title: \"甘特图2\",\n        readOnly: false,\n        disabledRowSilent: false,\n        legend: [\n          {\n            label: \"第一行tag\",\n            color: \"#365ce5\",\n            type: 1, // 用于判定同一网格行内具体所属行\n            dragable: true, // 此类型tag是否可以拖动\n            closeTip: false, // 是否关闭tag tip\n            btnList: [\n              // 右键菜单按钮列表\n              {\n                label: \"开启tag选中\",\n                disabled: false,\n              },\n              {\n                label: \"关闭tag选中\",\n                disabled: false,\n              },\n              {\n                label: \"清除所有tag选中\",\n                disabled: false,\n              },\n              {\n                label: \"获取所有选中tag\",\n                disabled: false,\n              },\n              {\n                label: \"加锁\",\n                value: \"addPreIcon\", // 自定义的唯一key，用于点击后匹配\n                disabled: false,\n              },\n              {\n                label: \"合并\",\n                value: \"merge\", // 自定义的唯一key，用于点击后匹配\n                disabled: false,\n              },\n            ],\n          },\n          {\n            label: \"第二行tag\",\n            color: \"#39c236\",\n            type: 2, // 用于判定同一网格行内具体所属行\n            dragable: false, // 此类型tag是否可以拖动\n          },\n        ],\n        startDate: \"2023/12/01\",\n        dateDuration: 7,\n        // 任务列菜单 - 每行的菜单都一样，若想给某行单独设置不同的菜单，则给row 对应行赋值 taskMenuList\n        taskMenuList: [\n          {\n            label: \"停产\",\n            disabled: false, // 是否禁用\n          },\n          {\n            label: \"启用\",\n            disabled: false, // 是否禁用\n          },\n        ],\n        // 甘特图行数据和每行的tag\n        rows: [\n          {\n            label: \"菜单不同\",\n            taskMenuList: [\n              {\n                label: \"不同的菜单1\",\n                disabled: true, // 是否禁用\n              },\n              {\n                label: \"不同的菜单2\",\n                disabled: false, // 是否禁用\n              },\n            ],\n            tags: [\n              {\n                startTime: \"2023/12/02 02:10:00\",\n                endTime: \"2023/12/03 06:10:00\",\n                label: \"生产实绩,此tag不显示tip\",\n                type: 2,\n                closeTip: true, // 不显示tip\n                className: \"\", // 可单独设置tag样式名\n                selected: false, // 是否选中\n                preIcon: \"iconfont icon-chakan\",\n              },\n              {\n                startTime: \"2023/12/01 02:10:00\",\n                endTime: \"2023/12/03 06:00:00\",\n                label: \"计划停机，同一行，但是颜色不同\",\n                className: \"haltTag\", // 可单独设置tag样式名\n                type: 1,\n                dragable: true, // 此类型tag是否可以拖动\n              },\n              {\n                startTime: \"2023/12/04 02:10:00\",\n                endTime: \"2023/12/05 06:00:00\",\n                label: \"停机，tag不可拖动\",\n                className: \"planHaltTag\", // 可单独设置tag样式名\n                type: 1,\n                dragable: false, // 此类型tag是否可以拖动\n              },\n              {\n                startTime: \"2023/12/05 12:10:00\",\n                endTime: \"2023/12/06 06:00:00\",\n                label: \"xxxx,xx吨,完成度90%\",\n                type: 1,\n              },\n            ],\n          },\n          {\n            label: \"项目B\",\n            tags: [\n              {\n                startTime: \"2023/12/06 02:10:00\",\n                endTime: \"2023/12/07 06:10:00\",\n                label: \"模型预排1111,xx吨,完成度90%\",\n                type: 1,\n              },\n            ],\n          },\n          {\n            label: \"项目C\",\n            disabled: true, // 禁止响应事件\n            tags: [],\n          },\n          {\n            label: \"项目D\",\n            tags: [\n              {\n                startTime: \"2023/12/01 02:10:00\",\n                endTime: \"2023/12/03 06:10:00\",\n                label: \"xxxx,xx吨,完成度90%\",\n                type: 1,\n              },\n            ],\n          },\n          {\n            label: \"项目E\",\n            tags: [],\n          },\n        ],\n        // 合计行\n        summaryRows: [\n          [\"合计1\", \"1\", \"2\", \"3\", \"1\", \"2\", \"3\", \"\"],\n          [\"合计2\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"11\"],\n        ],\n        // 甘特图右键菜单\n        rightClickMenuList: [\n          {\n            label: \"新增模型xx\",\n            disabled: true,\n          },\n          {\n            label: \"新增停机xx\",\n            disabled: false, // 是否禁用\n          },\n        ],\n        // tag拖拽结束是否显示时间选择框\n        dragTagEndShowTimeDialog: true,\n        // 是否显示tag 选中效果\n        showSelected: false,\n\n        // 甘特图为7+2天\n        decreaseDayNum: 1, // 显示前一天\n        IncreaseDayNum: 1, // 显示后一天\n\n        // tag拖动的避让效果，原理: 修改translateX(x)，这样不会对原始数据造成影响\n        openTagMoveDodgeAnimate: true, // 开启\n        selfAdaptionGanTTHeight: false, // 关闭高度自适应，采用高度撑开模式\n      },\n\n      // 显示标记线\n      showMarkLine: false,\n      markLineTime: \"2023/10/04 06:10:00\",\n\n      selectTagIds: [], // 甘特图内部的获取选中没有顺序，另外来个变量存储\n\n      recordPreStep: null, // 存储上一步，用于撤回\n    };\n  },\n  mounted() {\n    this.filterGanTTTags();\n  },\n  methods: {\n    handleChange(e){\n      this.ganTT1Option.startDate = e\n      this.ganTT1Option.rows = this.ganTT1OptionRows.map(item => {\n        const tags = item.tags.filter(j => j.startTime.includes(this.dateValue))\n        return {...item, tags}\n      })\n\n      console.log(this.ganTT1Option.rows, \"-------123\")\n      console.log(this.ganTT1OptionRows, \"-------1230\")\n\n\n    },\n\n    onSave(){\n      // const timeList = this.form.times.split(',')\n      this.ganTT1Option.startDate = this.dateValue\n      this.ganTT1Option.rows = this.ganTT1OptionRows.map(item => {\n        if(item.label === this.form.name){\n          item.tags = item.tags ? item.tags : []\n          item.tags.push({\n            startTime: `${this.dateValue} ${this.form.times[0]}`,\n            endTime: `${this.dateValue} ${this.form.times[1]}`,\n            label: `${this.form.number} | ${this.form.desc} | ${this.form.length}`,\n            type: 1,\n            dragable: true,\n          })\n        }\n        return item\n      })\n\n      this.drawer = false\n      console.log(this.ganTT1Option.rows, \"-------12\")\n\n    },\n    // 筛选\n    filterGanTTTags() {\n      let rows = this.ganTT2Option.rows;\n      if (+this.showMode === 1) {\n        // 全部显示\n        this.ganTT2Option.rows = rows.map((item) => {\n          item.tags.map((subItem) => {\n            subItem.hide = false;\n          });\n          return item;\n        });\n      } else {\n        // 筛选\n        this.ganTT2Option.rows = rows.map((item) => {\n          item.tags.map((subItem) => {\n            if (subItem.className) {\n              subItem.hide = true;\n            }\n          });\n          return item;\n        });\n      }\n    },\n    logParams() {\n      let ganTT1 = this.$refs[\"ganTT1\"];\n      let ganTT2 = this.$refs[\"ganTT2\"];\n      console.log(\n        \"ganTT1 标记线贯穿tags\",\n        ganTT1.getTimePierceTags(this.markLineTime)\n      );\n      console.log(\n        \"ganTT2 标记线贯穿tags\",\n        ganTT2.getTimePierceTags(this.markLineTime)\n      );\n\n      console.log(\"ganTT1 甘特图数据\", ganTT1.getRowsData());\n      console.log(\"ganTT2 甘特图数据\", ganTT2.getRowsData());\n\n      console.log(\n        \"ganTT1 项目B这行下的所有tags\",\n        ganTT1.getTagsByRowLabel(\"项目B\")\n      );\n    },\n    changeShowDetail(bool = false) {\n      this.showDetail = !this.showDetail;\n    },\n    changeMarkLineClick1(data) {\n      console.log(data, 1);\n    },\n    changeMarkLineClick2(data) {\n      console.log(data, 2);\n    },\n\n    // 甘特图右键菜单\n    rightClickMenuClick1(data) {\n      this.form.name = data.coordsInfo.coords[1]\n      // const startTime = data.coordsInfo.coords[0]?.split(\" \")[1]\n\n      // console.log(startTime, \"-----123\")\n      // this.form.times = [startTime, '']\n      this.drawer = true\n      console.log(\"甘特图右键菜单点击\", data);\n    },\n    // 甘特图右键菜单\n    rightClickMenuClick2(data) {\n      console.log(\"甘特图右键菜单点击\", data);\n      switch (+data.triggerIndex) {\n        // 点击按钮1\n        case 0:\n          console.log(\"点击按钮0\");\n          break;\n        case 1:\n          console.log(\"点击按钮1\");\n          break;\n      }\n    },\n    // 左侧任务菜单\n    taskMenuBtnClick(data) {\n      console.log(\"左侧任务菜单点击\", data);\n    },\n    // tag拖拽结束\n    tagDragEnd2(data) {\n      console.log(\"tag拖拽结束\", data);\n    },\n    tagDragStart() {\n      this.saveStep();\n    },\n    saveStep() {\n      this.recordPreStep = cloneObj(this.$refs[\"ganTT2\"].getRowsData());\n    },\n    withdraw() {\n      if (this.recordPreStep) {\n        this.ganTT2Option.rows = this.recordPreStep;\n        this.recordPreStep = null;\n      } else {\n        this.$message({\n          message: \"只能撤回一步\",\n          type: \"warning\",\n        });\n      }\n    },\n    // tag拖动结束后的时间选择弹窗关闭事件\n    closeTagTimeDialog() {\n      // 存储数据\n      this.ganTT2Option.rows = this.$refs[\"ganTT2\"].getRowsData();\n      console.log(\"注意：rows 改变将触发甘特图init方法，会清除避让信息\");\n    },\n    // tag上右键菜单按钮\n    tagMenuBtnClick1(data) {\n      console.log(\"tag上右键菜单按钮\", data);\n    },\n    // tag上右键菜单按钮\n    tagMenuBtnClick2(data) {\n      console.log(\"tag上右键菜单按钮\", data);\n      let { tag, triggerIndex, target } = data;\n\n      switch (target.label) {\n        case \"开启tag选中\": //\n          this.ganTT2Option.showSelected = true;\n          break;\n        case \"关闭tag选中\": //\n          this.ganTT2Option.showSelected = false;\n          break;\n        case \"清除所有tag选中\": //\n          this.$refs[\"ganTT2\"].clearAllTagSelected();\n          break;\n        case \"获取所有选中tag\": //\n          let selectedTags = this.$refs[\"ganTT2\"].getAllSelectedTags();\n          console.log(\"所有选中tag\", selectedTags);\n          break;\n      }\n\n      // 根据索引匹配、或者label、或者自定义的唯一key，自由发挥\n\n      if (target.value === \"addPreIcon\") {\n        // tag前添加图标\n        this.$refs[\"ganTT2\"].updateTag(\n          tag.tagId,\n          {\n            ...tag,\n            preIcon: !tag.preIcon ? \"el-icon-goods\" : \"\",\n          },\n          false\n        );\n      }\n\n      if (target.value === \"merge\") {\n        // 合并\n        if (this.selectTagIds.length < 2)\n          return this.$message({\n            message: \"请选择需要合并的两项\",\n            type: \"warning\",\n          });\n        this.$confirm(\"确定合并已选中的两个订单?\", \"\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\",\n        })\n          .then(() => {\n            let selectedTagsInGanTT = this.$refs[\"ganTT2\"].getAllSelectedTags(); // 获取已经选中的tag\n            console.log(\"已选中的两个订单:\", selectedTagsInGanTT);\n          })\n          .catch(() => {});\n      }\n    },\n    // tag 点击\n    tagClick2(data) {\n      console.log(\"tag 点击\", data);\n      if (!this.ganTT2Option.showSelected) return; // 不可选择\n\n      let tagItem = data.tag;\n      if (+tagItem.type !== 1)\n        return this.$message({\n          message: \"只有第一行可以选中\",\n          type: \"warning\",\n        });\n\n      let tagId = tagItem.tagId;\n      let isInRecord = this.selectTagIds.includes(tagId); // 当前tag是否存储到历史中\n      let _selected = !tagItem.selected; // 选中状态\n      let selectedTagsInGanTT = this.$refs[\"ganTT2\"].getAllSelectedTags(); // 获取已经选中的tag\n\n      if (this.selectTagIds.length) {\n        // 之前有选中项\n        let firstSelectedTagId = this.selectTagIds[0]; // 第一个id\n        let firstSelectedTag = selectedTagsInGanTT.find(\n          (_item) => _item.tagId === firstSelectedTagId\n        );\n        if (!firstSelectedTag) {\n          // 没有匹配项，说明甘特图中的tagid 重新生成了了 -- 之前的id无意义，建议给每个tag来个唯一id这样就会避免这种情况【如这个demo，撤回后这部分选中状态将消失】\n          // 这里将丢失之前的选中顺序\n          this.selectTagIds = selectedTagsInGanTT.map((_it) => _it.tagId); // 重新获取图里面的\n          if (!this.selectTagIds.length) return; // 选中状态tag移动报错bug修复\n          firstSelectedTagId = selectedTagsInGanTT[0].tagId;\n          firstSelectedTag = selectedTagsInGanTT[0];\n        }\n        let recordRowLabel = firstSelectedTag.parentKey; // 之前选的哪行\n        if (recordRowLabel !== tagItem.parentKey)\n          return this.$message({\n            message: \"请选择相同行\",\n            type: \"warning\",\n          });\n\n        // 取消之前那个tag选中\n        if (!isInRecord && _selected && this.selectTagIds.length >= 2) {\n          this.selectTagIds.shift();\n          this.$refs[\"ganTT2\"].updateTag(\n            firstSelectedTagId,\n            {\n              ...firstSelectedTag,\n              selected: false,\n            },\n            false\n          );\n        }\n      }\n\n      // 更新tag选中状态\n      this.selectTagIds = this.selectTagIds.filter((id) => id !== tagId);\n      _selected && this.selectTagIds.push(tagId);\n      this.$refs[\"ganTT2\"].updateTag(\n        tagId,\n        {\n          ...tagItem,\n          selected: _selected,\n        },\n        false\n      );\n    },\n\n    // tag上鼠标右键 --- 用来更改左侧菜单显示\n    tagContextmenuHandle2({ tag }) {\n      let findLgend = this.ganTT2Option.legend.find(\n        (item) => item.type === tag.type\n      );\n      let findLegendItem = findLgend.btnList.find(\n        (item) => item.value === \"addPreIcon\"\n      );\n      findLegendItem.label = tag.preIcon ? \"解锁\" : \"加锁\";\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.wrap {\n  width: 100%;\n  height: 100%;\n  background-color: #ffffff;\n  padding: 20px;\n  box-sizing: border-box;\n  color: #11152b;\n  overflow-x: hidden;\n}\n\n.gt1 {\n  width: 100%;\n  margin-top: 10px;\n  // height: 400px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n}\n\n.header {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 20px;\n\n  .legend {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    > span {\n      margin-left: 24px;\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n\n      &:last-child {\n        margin-left: 0;\n      }\n    }\n\n    i {\n      display: block;\n      margin-right: 6px;\n      width: 16px;\n      height: 16px;\n      border-radius: 3px;\n    }\n  }\n}\n\n.bottom {\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  width: 100%;\n\n  .left-box {\n    flex: auto;\n    overflow: hidden;\n\n    &.showDetail {\n      width: calc(100% - 300px);\n    }\n  }\n\n  .right-box {\n    position: relative;\n    margin-left: 53px;\n    flex: none;\n    background: #f0f2f5;\n    border: 1px solid rgba(233, 235, 240, 1);\n    border-radius: 8px;\n    transition: all ease 0.2s;\n\n    &.showDetail {\n      // transform: translateX(100%);\n      .detail-content {\n        width: 300px;\n      }\n    }\n\n    .detail-content {\n      transition: all ease 0.2s;\n      width: 0;\n    }\n\n    .arrow {\n      position: absolute;\n      left: 0;\n      top: 50%;\n      width: 32px;\n      height: 142px;\n      background: #505776;\n      border-radius: 8px 0px 0px 8px;\n      transform: translate(-100%, -50%);\n      cursor: pointer;\n      z-index: 2;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      writing-mode: tb;\n      color: #ffffff;\n      font-size: 16px;\n    }\n  }\n}\n\n.myTagTip {\n  p {\n    margin: 0;\n  }\n}\n\n// 计划停机\n:deep(.haltTag) {\n  background-color: #ff9c1b;\n}\n\n// 停机\n:deep(.planHaltTag) {\n  background-color: #f5212d;\n}\n</style>\n\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ganttDemo.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ganttDemo.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ganttDemo.vue?vue&type=template&id=69c49a8d&scoped=true\"\nimport script from \"./ganttDemo.vue?vue&type=script&lang=js\"\nexport * from \"./ganttDemo.vue?vue&type=script&lang=js\"\nimport style0 from \"./ganttDemo.vue?vue&type=style&index=0&id=69c49a8d&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"69c49a8d\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <ganttDemo />\n  </div>\n</template>\n\n<script>\nimport ganttDemo from './components/ganttDemo.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    ganttDemo\n  }\n}\n</script>\n\n<style>\n#app {\n  width: 100%;\n  height: 100%;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=78237b62\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=78237b62&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport './assets/iconfont/iconfont.css';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nVue.use(ElementUI);\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgantt\"] = self[\"webpackChunkgantt\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4886); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","staticClass","showOther","on","handleChange","model","value","dateValue","callback","$$v","expression","_e","class","showDetail","staticStyle","_b","ref","showMarkLine","markLineTime","$event","changeMarkLineClick1","rightClickMenuClick1","taskMenuBtnClick","tagMenuBtnClick1","ganTT1Option","drawer","activeName","form","name","$set","_l","optionList","item","label","number","desc","length","times","_v","onSave","cloneObj","obj","o","Object","prototype","toString","call","i","push","x","style","background","ganttBgColor","ganTTClick","ganTTblur","utils","oncontextmenuDisabled","currentTimeLine","markLine","movingTimeLine","height","paintTop","width","paintLeft","_s","title","colsInfo","col","cIndex","key","_date","format","t","timeFormat","gridLineColor","ganTTBottomHeight","rowsInfo","row","rIndex","disabled","taskMenuList","taskMenu","selectRow","disabledBgColor","stopPropagation","taskMenu_Open","rightClickMenuList","mItem","btnIndex","rightClickMenuEvent","apply","arguments","directives","rawName","tagMenu","visible","autoCloseTagMenu","btnList","tagBtnItem","tagBtnIndex","tagMenuBtnClickHandle","tagList","hide","tagId","getLegendConfig","color","tipWdith","tagMove","tagItemDragable","tagItemCloseTip","tagHasOperateMenu","showSelected","tagDragStart","tagChangeEnd","tagContextmenuHandle","tagClickHandle","tagblurHandle","scopedSlots","_u","fn","tagData","_t","paintBoxInfo","summaryRows","suArr","suIndex","minHeight","rowMinRowHeight","w","taskBtnItem","taskBtnIndex","tagTimeDialog","pickerOptions","timeRange","slot","closeTagTimeDialog","confirmTagTimeDlaiog","uuid","len","radix","r","chars","split","Math","random","join","Function","bind","judgeIsLocateNode","_node","cssStyle","window","getComputedStyle","position","findLocateParentNode","ele","parent","parentNode","locateParentNode","nodeName","document","getElementsByTagName","date","dayjs","add","num","unit","isNull","val","getStrVal","dt","getUnit","match","find","delValUnit","reg","RegExp","replace","e","preventDefault","setDOMH","dom","h","setDOMW","getDOMWH","_dom","offsetWidth","offsetHeight","clearCanvas","canvas","ctx","getContext","clearRect","setCanvasWH","easeInOutQuad","b","c","d","smoothScroll","startPosition","distance","duration","callBack","startTimeStamp","timeStamp","progress","run","requestAnimationFrame","moveInBoundary","contentDom","dragDom","left","top","minLeft","minTop","maxLeft","maxTop","tagIsTouchDisabledRow","disabledYMin","disabledYMax","tagHeight","tagTop","moving","dragable","tagItem","selected","moveBox","contextmenuHandle","clickHandle","tagBlur","closeTip","className","showOperateMark","visibleTip","showTagTip","preIcon","props","type","default","Boolean","component","components","ElPopover","Popover","tagItemLabel","tagMoveCallback","String","Number","data","changeWHing","moved","changeTimer","methods","$emit","getToContainerXY","pageX","y","pageY","addRemoveMouseEvent","moveHandle","moveE","clearMouseEvent","removeEventListener","changeChangeWHing","changeMoveing","addEventListener","bool","button","recordTagItem","LocateParentNode","$refs","canvasBoxLeft","canvvasBoxTop","info","getBoundingClientRect","boxLeft","offsetLeft","boxTop","offsetTop","mouseLeft","mouseTop","toBox_X","toBox_Y","tagItemDom","tagItemOld","clearTimeout","setTimeout","mounted","beforeDestroy","backgroundColor","borderTopColor","borderLeftColor","resizeObserver","rowPaddingTop","rowContentHeight","tagMarginTop","headerCellMinWidth","minSowTagRow","minRowHeight","min","hasTagsDataMinRowHeight","max","ElButton","Button","ElDialog","Dialog","ElDatePicker","DatePicker","yTimeLine","readOnly","disabledRowSilent","selfAdaptionGanTTHeight","legend","Array","startDate","dateDuration","decreaseDayNum","validator","IncreaseDayNum","rows","dragTagEndShowTimeDialog","openTagMoveDodgeAnimate","isFirstInit","scrolledXPercent","tickTimer","scrollTimer","draging","historyDraging","dodgeTagsInfo","tickCurrentTimer","rightMenuTemObj","selectTag","tag","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","watch","handler","console","log","init","deep","showAxisTime","computed","paintLeftVal","paintTopVal","reW","pxw","repair","toFixed","reH","pxH","dealTime","time","isTimeStap","_tt","dealTimeToMs","timeLd","getGanTTimeRange","startTime","endTime","getPxOfTimeParticle","paintBoxDom","timeStampGapToInfeedDistance","timeMs","_stime","getStartTimeByLeft","period","getLeftByStartTime","startGTTTime","error","pxOfTimeParticle","canvasLeftToGanTTLeft","getScrollLeft","ganTTLeftToCanvasLeft","pixelToDataCoordinate","currentRowIndex","getRowIndexByTop","coords","getDisabledYS","disabedYArr","map","subItem","getPreNoDisabledRowIndex","rowIndex","getNextNoDisabledRowIndex","judgeYisInDisabledRow","findRowIndex","getTopByRowIndex","keys","lengendItem","type_closeTip","_tagItem","getTagsMapByRowItem","rowItem","tagTypeObj","tags","calcTagLeftAndWidth","_etime","sp","calcTagTopAndHeight","parentKey","tagType","calcTagOffsetCanvasTop","addTag","rowParent","newTagItem","factoryTag","tagChangThenRefreshAll","updateTag","refreshGTT","timeStampDiffer","backfillTagListToRowsInfo","refreshGTTWH","deleteTag","filter","param","finalTop","disabledRows","correctTop","_tagHeight","correctRowIndex","_currentRowIndex","newRowLabel","some","sub","openTagTimeDialog","clearGuideLine","dodgeTag","preTagItem","nextTags","_dodge","before_endTime","afterTagItem","after_startTime","after_endTime","timeStampGap","transform","_nextTags","slice","clearTagDodge","tagMoveDodgeAnimate","dragTagItem","filterTypeTags","thisRowTags","afterTags","sort","a","mouseEvent","closeAllMenu","tagItemDomWidth","tagItemDomHeight","inDisabledRow","cursor","dealObj","_dx","_dy","_scrollLeft","showWidth","getTimeColW","scrollGanTTXTo","_scrollTop","getScrollTop","showHeight","scrollGanTTYTo","drawMoveGuideLineY","backfillTag","tagGTTconfig","_item","style_horizontal","style_vertical","createTagList","arr","concat","verticalTag","rowPaddingBottom","rowKey","rowHeight","range","Message","message","startT","endT","clearAllTagSelected","tagMenu_close","tagStyle","tagX","tagY","tagW","tagH","ofx","$nextTick","tagMenuRefDom","boxW","boxH","tagMenuW","tagMenuH","menuItem","target","triggerIndex","drawGridLine","beginPoints","endPoints","beginPath","moveTo","lineTo","lineWidth","strokeStyle","lineCap","stroke","drawDisabledRow","fillStyle","fillRect","drawGridCanvas","index","cols","ganttCanvas","_width","_height","_ctx","points","leftTop","rightTop","rightBottom","leftBottom","ganttBoxRefDom","tjRowNodes","querySelectorAll","_y","_x","nodeItem","setLineDash","ht","calcTagInRowTop","findRow","th","legendData","tagMarginBottom","rowInTop","isThis","rowTop","calcRowTopByRowLabel","calcRowTopByRowIndex","findIndex","calcRowHeightByRowsInfoItem","tagTypeNum","renderToDom","gbRefDom","paintWidth","reduce","pre","next","paintHeight","nodes","forEach","gtDom","factoryColsInfoItem","calcWHCore","headerDom","headerWidth","wd","from","durationArr","at","preArr","nextArr","preDay","abs","nextDay","reverse","ganttHeight","remainHeight","getSummaryRowsHeight","realH","hasTagRowsNum","zlH","floor","getDurationTimeWidth","tickTimeLineHandle","getdecreaseDayWidth","scrollXToLastPercent","scrollXBarDom","scrollWidth","scrollToDurationTime","scrollLeft","scrollXHandle","scrollContentDom","headerDomNodes","addScrollXEvent","removeScrollXEvent","scrollYBarDom","scrollTop","scrollYHandle","scrollDoms","mousewheelHandle","scrollHeight","dy","deltaY","wheelDeltaY","addScrollYEvent","paintBoxRefDom","removeScrollYEvent","clickShowMarkLine","eventX","canvasLeft","currentTime","inTags","getTimePierceTags","ganttLeft","hide_TickTimerLine","tRange","init_TickTimer","rightMenu_init","oncontextmenu","ev","event","_menu","offsetX","offsetY","display","paintW","paintH","rightMenu_close","coordsInfo","taskBtnList","taskMenuRefDom","gth","menuh","taskMenu_close","rowData","getTagsByRowLabel","rowLabel","getRowsData","tgItem","tgItemCopy","getAllSelectedTags","eventHandle","event_windowResize","addEvents","removeEvents","boxDom","ResizeObserver","observe","unobserve","ganttChartVue","showMode","options","legendAll","labelValue","bgColor","ganTT1OptionRows","ganTT2Option","selectTagIds","recordPreStep","filterGanTTTags","j","includes","logParams","ganTT1","ganTT2","changeShowDetail","changeMarkLineClick2","rightClickMenuClick2","tagDragEnd2","saveStep","withdraw","$message","tagMenuBtnClick2","selectedTags","$confirm","confirmButtonText","cancelButtonText","then","selectedTagsInGanTT","catch","tagClick2","isInRecord","_selected","firstSelectedTagId","firstSelectedTag","_it","recordRowLabel","shift","id","tagContextmenuHandle2","findLgend","findLegendItem","ganttDemo","Vue","config","productionTip","use","ElementUI","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","definition","defineProperty","enumerable","get","g","globalThis","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}